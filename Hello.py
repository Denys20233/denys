import streamlit as st
import pandas as pd
import plotly.express as px
# from PIL import Image

st.set_page_config(
    page_title="Portfolio",
    page_icon="üöÄ",
    layout="wide",
    initial_sidebar_state="expanded",
    # theme="dark"
)

st.markdown(
    """
    <style>
        body {
            color: #f8f9fa;
            background-color: #343a40;
        }
        .css-1v3fvcr {
            background-color: #343a40;
        }
    </style>
    """,
    unsafe_allow_html=True,
)


hide_st_style = """
<style>
footer {visibility: hidden;}
</style>
"""

st.markdown(hide_st_style, unsafe_allow_html=True)


import folium
from streamlit_folium import folium_static


def sql(selected_project):
    # st.subheader(f"{selected_project}")
    if selected_project == 'PostgreSQL':
        st.subheader("PostgreSQL - 1")
        st.write("")
        st.write("–ù–∞–ø–∏—Å–∞–≤ SQL –∑–∞–ø–∏—Ç, —â–æ –≤–∏–±–µ—Ä–µ –∑ —Ç–∞–±–ª–∏—Ü—ñ –Ω–∞—Å—Ç—É–ø–Ω—ñ –¥–∞–Ω—ñ:")

        text_sql1 = "ad_date - –¥–∞—Ç–∞ –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏"
        formatted_text1 = f"<div>‚Ä¢ {text_sql1}</div>"
        st.markdown(formatted_text1, unsafe_allow_html=True)

        text_sql2 = "campaign_id - —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–∞–º–ø–∞–Ω—ñ—ó"
        formatted_text2 = f"<div>‚Ä¢ {text_sql2}</div>"
        st.markdown(formatted_text2, unsafe_allow_html=True)

        text_sql3 = "–∞–≥—Ä–µ–≥–æ–≤–∞–Ω—ñ –∑–∞ –¥–∞—Ç–æ—é —Ç–∞ id –∫–∞–º–ø–∞–Ω—ñ—ó –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤:"
        formatted_text3 = f"<div>‚Ä¢ {text_sql3}</div>"
        st.markdown(formatted_text3, unsafe_allow_html=True)


        text_sql4 = "- –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫–∞–∑—ñ–≤"
        text_sql5 = "- –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ–∫—ñ–≤"
        text_sql6 = "- –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏—Ç—Ä–∞—Ç"
        text_sql7 = "- –∑–∞–≥–∞–ª—å–Ω–∏–π Value –∫–æ–Ω–≤–µ—Ä—Å—ñ–π"

        formatted_text4 = f"""
        <div style='<div style='font-size: 0.5em;'>{text_sql4}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql5}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql6}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql7}</div>
        """
        st.markdown(formatted_text4, unsafe_allow_html=True)

        st.write("")

        text_sql8 = "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∞–≥—Ä–µ–≥–æ–≤–∞–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –≤–∏—Ç—Ä–∞—Ç —Ç–∞ –∫–æ–Ω–≤–µ—Ä—Å—ñ–π, —Ä–æ–∑—Ä–∞—Ö—É–≤–∞–≤ –¥–ª—è –∫–æ–∂–Ω–æ—ó –¥–∞—Ç–∏ —Ç–∞ id –∫–∞–º–ø–∞–Ω—ñ—ó —Ç–∞–∫—ñ –º–µ—Ç—Ä–∏–∫–∏:"
        formatted_text8 = f"<div>‚Ä¢ {text_sql8}</div>"
        st.markdown(formatted_text8, unsafe_allow_html=True)

        text_sql9 = "- CPC"
        text_sql10 = "- CPM"
        text_sql11 = "- CTR"
        text_sql12 = "- ROMI"

        formatted_text5 = f"""
        <div style='<div style='font-size: 0.5em;'>{text_sql9}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql10}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql11}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql12}</div>
        """
        st.markdown(formatted_text5, unsafe_allow_html=True)

        st.write("")

        text_sql13 = "–û–∫—Ä–µ–º–∏–º –∑–∞–ø–∏—Ç–æ–º —Å–µ—Ä–µ–¥ –∫–∞–º–ø–∞–Ω—ñ–π –∑ –∑–∞–≥–∞–ª—å–Ω–æ—é —Å—É–º–æ—é –≤–∏—Ç—Ä–∞—Ç –±—ñ–ª—å—à–µ 500 000 –∑–Ω–∞–π–¥–∏ –∫–∞–º–ø–∞–Ω—ñ—é –∑ –Ω–∞–π–≤–∏—â–∏–º ROMI."
        formatted_text13 = f"<div>‚Ä¢ {text_sql13}</div>"
        st.markdown(formatted_text13, unsafe_allow_html=True)

        sql_code1 = """
select
	campaign_id,
	ad_date,
	sum(spend) as spend_suma,
	sum(impressions) as impressions_suma,
	sum(clicks) as clicks_suma,
	sum(value) as value_suma,
	round(Cast(sum(spend) as decimal(10,4)) / sum(clicks), 4) as CPC,
	round((Cast(sum(spend) as decimal(10,4)) / sum(impressions)) * 1000, 4) as CPM,
	round((Cast(sum(clicks) as decimal(10,4)) / sum(impressions)) * 100, 4) as CTR_percentage,
	round((((cast(sum(value) as decimal(10,1)) - sum(spend)) / sum(spend)) * 100), 1) as ROMI_percentage
from facebook_ads_basic_daily
where spend > 0 and clicks > 0 and impressions > 0
group by
	campaign_id,
	ad_date;



select
	campaign_id,
	sum(value) as value_suma,
	sum(spend) as spend_suma,
	round((((cast(sum(value) as decimal(10,1)) - sum(spend)) / sum(spend)) * 100), 1) as ROMI_percentage
from facebook_ads_basic_daily
where spend > 0
group by
	campaign_id 
having sum(spend) > 500000
limit 1;
"""
        st.write("")
        st.code(sql_code1, language='sql')
        st.write("")
        st.subheader("PostgreSQL - 2.1")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ –¥–∞–Ω—ñ –∑ —á–æ—Ç–∏—Ä—å–æ—Ö —Ç–∞–±–ª–∏—Ü—å –≤ –ë–î:")
        st.write("")
        text_sql14 = "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∞–≥—Ä–µ–≥–æ–≤–∞–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –≤–∏—Ç—Ä–∞—Ç —Ç–∞ –∫–æ–Ω–≤–µ—Ä—Å—ñ–π, —Ä–æ–∑—Ä–∞—Ö—É–≤–∞–≤ –¥–ª—è –∫–æ–∂–Ω–æ—ó –¥–∞—Ç–∏ —Ç–∞ id –∫–∞–º–ø–∞–Ω—ñ—ó —Ç–∞–∫—ñ –º–µ—Ç—Ä–∏–∫–∏:"
        formatted_text14 = f"<div>‚Ä¢ {text_sql14}</div>"
        st.markdown(formatted_text14, unsafe_allow_html=True)

        text_sql15 = "- ad_date - –¥–∞—Ç–∞ –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏ –≤ Google —Ç–∞ Facebook"
        text_sql16 = "- campaign_name - –Ω–∞–∑–≤–∞ –∫–∞–º–ø–∞–Ω—ñ—ó –≤ Google —Ç–∞ Facebook"
        text_sql17 = "- spend, impressions, reach, clicks, leads, value - –º–µ—Ç—Ä–∏–∫–∏ –∫–∞–º–ø–∞–Ω—ñ–π —Ç–∞ –Ω–∞–±–æ—Ä—ñ–≤ –æ–≥–æ–ª–æ—à–µ–Ω—å —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –¥–Ω—ñ"

        formatted_text6 = f"""
        <div style='<div style='font-size: 0.5em;'>{text_sql15}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql16}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql17}</div>
        """
        st.markdown(formatted_text6, unsafe_allow_html=True)

        st.write("")

        text_sql18 = "–ó –æ—Ç—Ä–∏–º–∞–Ω–æ—ó –æ–± º—î–¥–Ω–∞–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ (CTE) –∑—Ä–æ–±–∏–≤ –≤–∏–±—ñ—Ä–∫—É:"
        formatted_text18 = f"<div>‚Ä¢ {text_sql18}</div>"
        st.markdown(formatted_text18, unsafe_allow_html=True)

        text_sql19 = "- ad_date - –¥–∞—Ç–∞ –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏"
        text_sql20 = "- campaign_name - –Ω–∞–∑–≤–∞ –∫–∞–º–ø–∞–Ω—ñ—ó"
        text_sql21 = "- –∞–≥—Ä–µ–≥–æ–≤–∞–Ω—ñ –∑–∞ –¥–∞—Ç–æ—é —Ç–∞ campaign_name –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤: (–∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏—Ç—Ä–∞—Ç, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫–∞–∑—ñ–≤, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ–∫—ñ–≤, –∑–∞–≥–∞–ª—å–Ω–∏–π Value –∫–æ–Ω–≤–µ—Ä—Å—ñ–π)"

        formatted_text7 = f"""
        <div style='<div style='font-size: 0.5em;'>{text_sql19}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql20}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql21}</div>
        """
        st.markdown(formatted_text7, unsafe_allow_html=True)
        st.write("")
        sql_code2 = """
with test_table as (select ad_date, campaign_name, spend, impressions, reach, clicks, leads, value from facebook_ads_basic_daily
join facebook_adset on facebook_adset.adset_id = facebook_ads_basic_daily.adset_id
join facebook_campaign on facebook_campaign.campaign_id = facebook_ads_basic_daily.campaign_id
union all 
select ad_date, campaign_name, spend, impressions, reach, clicks, leads, value from Google_ads_basic_daily
)
select 
	ad_date,
	campaign_name,
	sum(spend) as spend_suma,
	sum(impressions) as impressions_suma,
	sum(clicks) as clicks_suma,
	sum(value) as value_suma
from test_table
group by ad_date, campaign_name;
"""
        st.write("")
        st.code(sql_code2, language='sql')

        st.write("")
        st.subheader("PostgreSQL - 2.2")
        st.write("")
        st.write("""–û–± º—î–¥–Ω–∞–≤—à–∏ –¥–∞–Ω—ñ –∑ —á–æ—Ç–∏—Ä—å–æ—Ö —Ç–∞–±–ª–∏—Ü—å, –≤–∏–∑–Ω–∞—á–∏–≤ –∫–∞–º–ø–∞–Ω—ñ—é –∑ –Ω–∞–π–≤–∏—â–∏–º ROMI —Å–µ—Ä–µ–¥ —É—Å—ñ—Ö –∫–∞–º–ø–∞–Ω—ñ–π –∑ –∑–∞–≥–∞–ª—å–Ω–æ—é —Å—É–º–æ—é –≤–∏—Ç—Ä–∞—Ç –±—ñ–ª—å—à–µ 500 000 —Ç–∞
–≤ —Ü—ñ–π –∫–∞–º–ø–∞–Ω—ñ—ó –≤–∏–∑–Ω–∞—á–∏–≤ –≥—Ä—É–ø—É –æ–≥–æ–ª–æ—à–µ–Ω—å (adset_name) –∑ –Ω–∞–π–≤–∏—â–∏–º ROMI.""")
        st.write("")

        sql_code3 = """
with test_table as (select ad_date, campaign_name, adset_name, spend, value from facebook_ads_basic_daily
join facebook_adset on facebook_adset.adset_id = facebook_ads_basic_daily.adset_id
join facebook_campaign on facebook_campaign.campaign_id = facebook_ads_basic_daily.campaign_id
union all 
select ad_date, campaign_name, adset_name, spend, value from Google_ads_basic_daily
)
select 
  campaign_name,
  sum(spend) as spend_suma,
  sum(value) as value_suma,
  round((((cast(sum(value) as decimal(10,1)) - sum(spend)) / sum(spend)) * 100), 1) as ROMI_percentage,
  adset_name
from test_table
where spend > 0 
group by campaign_name, adset_name
having sum(spend) > 500000
order by round((((cast(sum(value) as decimal(10,1)) - sum(spend)) / sum(spend)) * 100), 1) desc
limit 1
"""
        st.write("")
        st.code(sql_code3, language='sql')

        st.write("")
        st.subheader("PostgreSQL - 3")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ –¥–∞–Ω—ñ –∑ —á–æ—Ç–∏—Ä—å–æ—Ö —Ç–∞–±–ª–∏—Ü—å –≤ –ë–î:")
        st.write("")

        text_sql21 = "–£ CTE –∑–∞–ø–∏—Ç—ñ –æ–± º—î–¥–Ω–∞–≤ –¥–∞–Ω—ñ –∑ –Ω–∞–≤–µ–¥–µ–Ω–∏—Ö –≤–∏—â–µ —Ç–∞–±–ª–∏—Ü—å, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏:"
        formatted_text21 = f"<div>‚Ä¢ {text_sql21}</div>"
        st.markdown(formatted_text21, unsafe_allow_html=True)

        text_sql22 = "- ad_date - –¥–∞—Ç–∞ –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏ –≤ Google —Ç–∞ Facebook;"
        text_sql23 = "- url_parameters - —á–∞—Å—Ç–∏–Ω–∞ URL –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∫–∞–º–ø–∞–Ω—ñ–π, —â–æ –≤–∫–ª—é—á–∞—î –≤ —Å–µ–±–µ UTM –ø–∞—Ä–∞–º–µ—Ç—Ä–∏;"
        text_sql24 = "- spend, impressions, reach, clicks, leads, value - –º–µ—Ç—Ä–∏–∫–∏ –∫–∞–º–ø–∞–Ω—ñ–π —Ç–∞ –Ω–∞–±–æ—Ä—ñ–≤ –æ–≥–æ–ª–æ—à–µ–Ω—å —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –¥–Ω—ñ;"

        formatted_text8 = f"""
        <div style='<div style='font-size: 1.2em;'>{text_sql22}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql23}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql24}</div>
        """
        st.markdown(formatted_text8, unsafe_allow_html=True)

        st.write("")

        text_sql25 = "–ó –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ CTE –∑—Ä–æ–±–∏–≤ –≤–∏–±—ñ—Ä–∫—É:"
        formatted_text25 = f"<div>‚Ä¢ {text_sql25}</div>"
        st.markdown(formatted_text25, unsafe_allow_html=True)

        text_sql26 = "- ad_date - –¥–∞—Ç–∞ –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏"
        text_sql27 = "- utm_campaign - –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ utm_campaign –∑ –ø–æ–ª—è utm_parameters, —â–æ –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—î –Ω–∞—Å—Ç—É–ø–Ω–∏–º —É–º–æ–≤–∞–º (–∑–≤–µ–¥–µ–Ω–µ –¥–æ –Ω–∏–∂–Ω—å–æ–≥–æ —Ä–µ–≥—ñ—Å—Ç—Ä–∞ —Ç–∞ —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è utm_campaign –≤ utm_parameters –¥–æ—Ä—ñ–≤–Ω—é—î ‚Äònan‚Äô,  –≤–æ–Ω–æ –º–∞—î –±—É—Ç–∏ –ø—É—Å—Ç–∏–º (—Ç–æ–±—Ç–æ null) –≤ —Ä–µ–∑—É–ª—å—Ç—É—é—á—ñ–π —Ç–∞–±–ª–∏—Ü—ñ"
        text_sql28 = "- –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏—Ç—Ä–∞—Ç, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫–∞–∑—ñ–≤, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ–∫—ñ–≤, –∞ —Ç–∞–∫–æ–∂ –∑–∞–≥–∞–ª—å–Ω–∏–π Value –∫–æ–Ω–≤–µ—Ä—Å—ñ–π —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–∞—Ç—É –ø–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ–π –∫–∞–º–ø–∞–Ω—ñ—ó;"
        text_sql29 = "- CTR, CPC, CPM, ROMI —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–∞—Ç—É –ø–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ–π –∫–∞–º–ø–∞–Ω—ñ—ó."

        formatted_text9 = f"""
        <div style='<div style='font-size: 0.5em;'>{text_sql26}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql27}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql28}</div>
        <div style='<div style='font-size: 1.2em;'>{text_sql29}</div>
        """
        st.markdown(formatted_text9, unsafe_allow_html=True)
        st.write("")

        sql_code4 = """
with test_table as (
select 
  campaign_name, ad_date, url_parameters, spend, impressions,
  reach, clicks, leads, value,
  coalesce(leads, 0) as leads_1
from facebook_ads_basic_daily
join facebook_adset on facebook_adset.adset_id = facebook_ads_basic_daily.adset_id
join facebook_campaign on facebook_campaign.campaign_id = facebook_ads_basic_daily.campaign_id
union all 
select 
  campaign_name, ad_date, url_parameters, spend, impressions,
  reach, clicks, leads, value,
  coalesce(leads, 0) as leads_1 
from Google_ads_basic_daily
)
select 
  ad_date,
  case
    when lower(substring(url_parameters, 'utm_campaign=([^&#$]+)')) = 'nan' then null
    else lower(substring(url_parameters, 'utm_campaign=([^&#$]+)')) 
  end as utm_campaign,
  sum(spend) as spend_suma,
  sum(impressions) as impressions_suma,
  sum(clicks) as clicks_suma,
  sum(value) as value_suma,
  case
    when impressions > 0 then (cast(sum(clicks) as float) / sum(impressions)) * 100
    else 0
  end as CTR,
  case
    when clicks > 0 then sum(spend) / sum(clicks)
    else 0
  end as CPC,
  case
    when impressions > 0 then (cast(sum(spend) as float) / sum(impressions)) * 1000
    else 0
  end as CPM,
  case
    when spend > 0 then ((cast(sum(value) as float) - sum(spend)) / sum(spend)) * 100
    else 0
  end as ROMI
from test_table
group by utm_campaign, ad_date, clicks, impressions, spend
"""
        st.write("")
        st.code(sql_code4, language='sql')

        st.write("")
        st.subheader("PostgreSQL - 4")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ CTE –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è. –¶–µ –±—É–¥—É—Ç—å –¥–∞–Ω—ñ –∑ Facebook —ñ Google –∑ –ø–æ–ª—è–º–∏:")

        text_sql30 = "ad_date"
        text_sql31 = "url_parameters"
        text_sql32 = "spend"
        text_sql33 = "impressions"
        text_sql34 = "reach"
        text_sql35 = "licks"
        text_sql36 = "leads"
        text_sql37 = "value"

        formatted_text10 = f"""
        <div>‚Ä¢ {text_sql30}</div>
        <div>‚Ä¢ {text_sql31}</div>
        <div>‚Ä¢ {text_sql32}</div>
        <div>‚Ä¢ {text_sql33}</div>
        <div>‚Ä¢ {text_sql34}</div>
        <div>‚Ä¢ {text_sql35}</div>
        <div>‚Ä¢ {text_sql36}</div>
        <div>‚Ä¢ {text_sql37}</div>
        """
        st.markdown(formatted_text10, unsafe_allow_html=True)

        st.write("")
        st.write("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ CTE –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –≤ –Ω–æ–≤–æ–º—É (–¥—Ä—É–≥–æ–º—É) CTE –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∏–±—ñ—Ä–∫–∏ –∑ —Ç–∞–∫–∏–º–∏ –¥–∞–Ω–∏–º–∏:")

        text_sql38 = "ad_month - –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –º—ñ—Å—è—Ü—è –¥–∞—Ç–∏ –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏ (–æ—Ç—Ä–∏–º–∞–Ω–µ –∑ ad_date);"
        text_sql39 = "utm_campaign, –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏—Ç—Ä–∞—Ç, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫–∞–∑—ñ–≤, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ–∫—ñ–≤, value –∫–æ–Ω–≤–µ—Ä—Å—ñ–π, CTR, CPC, CPM, ROMI"

        formatted_text11 = f"""
        <div>‚Ä¢ {text_sql38}</div>
        <div>‚Ä¢ {text_sql39}</div>
        """
        st.markdown(formatted_text11, unsafe_allow_html=True)

        st.write("")
        st.write("–ó—Ä–æ–±–∏–≤ —Ä–µ–∑—É–ª—å—Ç—É—é—á—É –≤–∏–±—ñ—Ä–∫—É –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –ø–æ–ª—è–º–∏:")

        text_sql40 = "Ad_month;"
        text_sql41 = "utm_campaign, –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏—Ç—Ä–∞—Ç, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫–∞–∑—ñ–≤, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ–∫—ñ–≤, value –∫–æ–Ω–≤–µ—Ä—Å—ñ–π, CTR, CPC, CPM, ROMI;"

        formatted_text12 = f"""
        <div>‚Ä¢ {text_sql40}</div>
        <div>‚Ä¢ {text_sql41}</div>
        """
        st.markdown(formatted_text12, unsafe_allow_html=True)

        st.write("")
        st.write("–î–ª—è –∫–æ–∂–Ω–æ—ó utm_campaign –≤ –∫–æ–∂–µ–Ω –º—ñ—Å—è—Ü—å –¥–æ–¥–∞–≤ –Ω–æ–≤–µ –ø–æ–ª–µ: ‚Äò—Ä—ñ–∑–Ω–∏—Ü—è CPM, CTR —Ç–∞ ROMI‚Äô –≤ –ø–æ—Ç–æ—á–Ω–æ–º—É –º—ñ—Å—è—Ü—ñ –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö.")

        st.write("")
        sql_code5 = """
with test_table_1 as (
select 
  ad_date, url_parameters, spend, impressions,
  reach, clicks, leads, value
from facebook_ads_basic_daily
join facebook_adset on facebook_adset.adset_id = facebook_ads_basic_daily.adset_id
join facebook_campaign on facebook_campaign.campaign_id = facebook_ads_basic_daily.campaign_id
union all 
select 
  ad_date, url_parameters, spend, impressions,
  reach, clicks, leads, value
from Google_ads_basic_daily
),
test_table_2 as (
select 
  date_trunc('month', ad_date) as ad_month,
    case
      when lower(substring(url_parameters, 'utm_campaign=([^&#$]+)')) = 'nan' then null
        else lower(substring(url_parameters, 'utm_campaign=([^&#$]+)')) 
        end as utm_campaign,
  sum(spend) as spend_suma,
    sum(impressions) as impressions_suma,
    sum(clicks) as clicks_suma,
    sum(value) as value_suma,
    case
      when impressions > 0 then (cast(sum(clicks) as float) / sum(impressions)) * 100
        else 0
        end as CTR,
    case
        when clicks > 0 then sum(spend) / sum(clicks)
        else 0
        end as CPC,
    case
        when impressions > 0 then (cast(sum(spend) as float) / sum(impressions)) * 1000
        else 0
        end as CPM,
    case
        when spend > 0 then ((cast(sum(value) as float) - sum(spend)) / sum(spend)) * 100
        else 0
        end as ROMI
from test_table_1
group by ad_date, url_parameters, clicks, impressions, spend
),
finish_table as(
select 
	utm_campaign as utm,
	ad_month as current_ad_month,
	((AVG(CPM) - lag(AVG(CPM), 1) over(PARTITION by utm_campaign order by ad_month))
			/ lag(AVG(CPM), 1) over(PARTITION by utm_campaign order by ad_month)) * 100 as CPM_difference,
	((AVG(CTR) - lag(AVG(CTR), 1) over(PARTITION by utm_campaign order by ad_month)) 
			/ lag(AVG(CTR), 1) over(PARTITION by utm_campaign order by ad_month)) * 100 as CTR_difference,
	((AVG(ROMI) - lag(AVG(ROMI), 1) over(PARTITION by utm_campaign order by ad_month)) 
			/ lag(AVG(ROMI), 1) over(PARTITION by utm_campaign order by ad_month)) * 100 as ROMI_difference,
--	AVG(CPM) as current_CPM,
--	AVG(CTR)as current_CTR,
--	AVG(ROMI)as current_ROMI,
	ad_month - interval '1 month' as month_ahead
--	lag(AVG(CPM), 1) over(PARTITION by utm_campaign order by ad_month) as CPM_ahead,
--	lag(AVG(CTR), 1) over(PARTITION by utm_campaign order by ad_month) as CTR_ahead,
--	lag(AVG(ROMI), 1) over(PARTITION by utm_campaign order by ad_month) as ROMI_ahead
from test_table_2
group by ad_month, month_ahead, utm
)
--select * from finish_table;
select 
	current_ad_month,
	utm_campaign,
	Round(CPM_difference) as CPM_difference,
	Round(CTR_difference) as CTR_difference,
	Round(ROMI_difference) as ROMI_difference,
	test_table_2.value_suma,
	test_table_2.spend_suma,
	test_table_2.clicks_suma,
	test_table_2.impressions_suma,
	CPM, CTR, CPC, ROMI
from finish_table
join test_table_2 on test_table_2.utm_campaign = finish_table.utm
"""
        st.write("")
        st.code(sql_code5, language='sql')

    elif selected_project == 'Big Query':
    
        st.subheader("Big Query - 1")
        st.write("")
        st.write("–°—Ç–≤–æ—Ä–∏–≤ –∑–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ø–æ–¥—ñ—ó, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ —Å–µ—Å—ñ—ó –≤ GA4. –£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –º–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ —Ç–∞–±–ª–∏—Ü—é, —â–æ –≤–∫–ª—é—á–∞—Ç–∏–º–µ –≤ —Å–µ–±–µ —Ç–∞–∫—ñ –ø–æ–ª—è:")

        text_sql42 = "event_timestamp - –¥–∞—Ç–∞ —Ç–∞ —á–∞—Å –ø–æ–¥—ñ—ó (—Ç–∏–ø –¥–∞–Ω–∏—Ö timestamp)"
        text_sql43 = "user_pseudo_id - –∞–Ω–æ–Ω—ñ–º–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ GA4"
        text_sql44 = "session_id - —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Å–µ—Å—ñ—ó –ø–æ–¥—ñ–π –≤ GA4"
        text_sql45 = "event_name - –Ω–∞–∑–≤–∞ –ø–æ–¥—ñ—ó"
        text_sql46 = "country - –∫—Ä–∞—ó–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Å–∞–π—Ç—É"
        text_sql47 = "device_category - –∫–∞—Ç–µ–≥–æ—Ä—ñ—è –ø—Ä–∏—Å—Ç—Ä–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Å–∞–π—Ç—É"
        text_sql48 = "source - –¥–∂–µ—Ä–µ–ª–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É"
        text_sql49 = "medium - medium –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É"
        text_sql50 = "campaign - –Ω–∞–∑–≤–∞ –∫–∞–º–ø–∞–Ω—ñ—ó –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É"
    
        formatted_text13 = f"""
        <div>‚Ä¢ {text_sql42}</div>
        <div>‚Ä¢ {text_sql43}</div>
        <div>‚Ä¢ {text_sql44}</div>
        <div>‚Ä¢ {text_sql45}</div>
        <div>‚Ä¢ {text_sql46}</div>
        <div>‚Ä¢ {text_sql47}</div>
        <div>‚Ä¢ {text_sql48}</div>
        <div>‚Ä¢ {text_sql49}</div>
        <div>‚Ä¢ {text_sql50}</div>
        """
        st.markdown(formatted_text13, unsafe_allow_html=True)

        st.write("")


        st.write("–¢–∞–±–ª–∏—Ü—è  –≤–∫–ª—é—á–∞—î –ª–∏—à–µ –¥–∞–Ω—ñ –∑–∞ 2021 —Ä—ñ–∫, —Ç–∞ –¥–∞–Ω—ñ –∑ —Ç–∞–∫–∏—Ö –ø–æ–¥—ñ–π:")

        text_sql51 = "–ü–æ—á–∞—Ç–æ–∫ —Å–µ—Å—ñ—ó –Ω–∞ —Å–∞–π—Ç—ñ"
        text_sql52 = "–ü–µ—Ä–µ–≥–ª—è–¥ —Ç–æ–≤–∞—Ä—É"
        text_sql53 = "–î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –¥–æ –∫–æ—Ä–∑–∏–Ω–∏"
        text_sql54 = "–ü–æ—á–∞—Ç–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
        text_sql55 = "–î–æ–¥–∞–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É"
        text_sql56 = "–î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–ª–∞—Ç—ñ–∂–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó"
        text_sql57 = "–ü–æ–∫—É–ø–∫–∞"
    
        formatted_text14 = f"""
        <div>‚Ä¢ {text_sql51}</div>
        <div>‚Ä¢ {text_sql52}</div>
        <div>‚Ä¢ {text_sql53}</div>
        <div>‚Ä¢ {text_sql54}</div>
        <div>‚Ä¢ {text_sql55}</div>
        <div>‚Ä¢ {text_sql56}</div>
        <div>‚Ä¢ {text_sql57}</div>
        """
        st.markdown(formatted_text14, unsafe_allow_html=True)

        st.write("")

        sql_code6 = """SELECT distinct
  TIMESTAMP_MICROS(event_timestamp) as event_date,
  user_pseudo_id,
  (select value.int_value from unnest(event_params) where key = 'ga_session_id') as session_id,
  event_name,
  geo.country,
  device.category,
  traffic_source.source,
  traffic_source.medium,
  traffic_source.name as campaign
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`
where _table_suffix between '20210101' and '20211231'
  and event_name in ('session_start', 'view_item_list', 'add_to_cart', 'begin_checkout', 'add_shipping_info', 'add_payment_info', 'purchase')
LIMIT 1000;

"""
        st.write("")
        st.code(sql_code6, language='sql')

        st.subheader("Big Query - 2")
        st.write("")
        st.write("–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∫–æ–Ω–≤–µ—Ä—Å—ñ–π –≤ —Ä–æ–∑—Ä—ñ–∑—ñ –¥–∞—Ç —Ç–∞ –∫–∞–Ω–∞–ª—ñ–≤ —Ç—Ä–∞—Ñ—ñ–∫—É. –°—Ç–≤–æ—Ä–∏–≤ –∑–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∫–æ–Ω–≤–µ—Ä—Å—ñ—ó –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É —Å–µ—Å—ñ—ó –¥–æ –ø–æ–∫—É–ø–∫–∏. –†–µ–∑—É–ª—å—Ç—É—é—á–∞ —Ç–∞–±–ª–∏—Ü—è  –≤–∫–ª—é—á–∞—î –≤ —Å–µ–±–µ —Ç–∞–∫—ñ –ø–æ–ª—è:")

        text_sql58 = "event_date - –¥–∞—Ç–∞ —Å—Ç–∞—Ä—Ç—É —Å–µ—Å—ñ—ó, —â–æ –æ—Ç—Ä–∏–º–∞–Ω–∞ –∑ –ø–æ–ª—è event_timestamp"
        text_sql59 = "source - –¥–∂–µ—Ä–µ–ª–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É"
        text_sql60 = "medium - medium –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É"
        text_sql61 = "campaign - –Ω–∞–∑–≤–∞ –∫–∞–º–ø–∞–Ω—ñ—ó –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É"
        text_sql62 = "ser_sessions_count - –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —Å–µ—Å—ñ–π –≤ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–∞—Ç—É —Ç–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É —Ç—Ä–∞—Ñ—ñ–∫—É."
        text_sql63 = "visit_to_cart - –∫–æ–Ω–≤–µ—Ä—Å—ñ—è –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É —Å–µ—Å—ñ—ó –Ω–∞ —Å–∞–π—Ç—ñ –¥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –≤ –∫–æ—Ä–∑–∏–Ω—É (—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–∞—Ç—É —Ç–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É —Ç—Ä–∞—Ñ—ñ–∫—É)"
        text_sql64 = "visit_to_checkout - –∫–æ–Ω–≤–µ—Ä—Å—ñ—è –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É —Å–µ—Å—ñ—ó –Ω–∞ —Å–∞–π—Ç—ñ –¥–æ —Å–ø—Ä–æ–±–∏ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–≤–æ–≤–ª–µ–Ω–Ω—è (—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–∞—Ç—É —Ç–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É —Ç—Ä–∞—Ñ—ñ–∫—É)"
        text_sql65 = "Visit_to_purchase - –∫–æ–Ω–≤–µ—Ä—Å—ñ—è –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É —Å–µ—Å—ñ—ó –Ω–∞ —Å–∞–π—Ç—ñ –¥–æ –ø–æ–∫—É–ø–∫–∏ (—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–∞—Ç—É —Ç–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É —Ç—Ä–∞—Ñ—ñ–∫—É)"
    
        formatted_text15 = f"""
        <div>‚Ä¢ {text_sql58}</div>
        <div>‚Ä¢ {text_sql59}</div>
        <div>‚Ä¢ {text_sql60}</div>
        <div>‚Ä¢ {text_sql61}</div>
        <div>‚Ä¢ {text_sql62}</div>
        <div>‚Ä¢ {text_sql63}</div>
        <div>‚Ä¢ {text_sql64}</div>
        <div>‚Ä¢ {text_sql65}</div>
        """
        st.markdown(formatted_text15, unsafe_allow_html=True)

        st.write("")

        sql_code7 = """with CTE_0 as (
select
  Date(TIMESTAMP_MICROS(event_timestamp)) as event_date,
  traffic_source.source as source_of_site,
  traffic_source.medium as medium,
  traffic_source.name as campaign,
  (select value.int_value from unnest(event_params) where key = 'ga_session_id') as session_id,
  user_pseudo_id
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`
where _table_suffix between '20210101' and '20211231'
)
select
  event_date,
  source_of_site,
  medium,
  campaign,
  COUNT(DISTINCT CONCAT(user_pseudo_id, CAST(session_id AS STRING))) AS user_sessions_count,
  ((select count(event_name)
          FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`
          where _table_suffix between '20210101' and '20211231'
          and event_name = 'add_to_cart') / count(session_id)) * 100  as visit_to_cart,        
  ((select count(event_name)
          FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`
          where _table_suffix between '20210101' and '20211231'
          and event_name = 'begin_checkout') / count(session_id)) * 100  as visit_to_checkout,
  ((select count(event_name)
          FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`
          where _table_suffix between '20210101' and '20211231'
          and event_name = 'purchase') / count(session_id)) * 100  as visit_to_purchase,
from CTE_0
group by event_date, source_of_site, campaign, medium
"""
        st.write("")
        st.code(sql_code7, language='sql')

        st.subheader("Big Query - 3")
        st.write("")
        st.write("–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∫–æ–Ω–≤–µ—Ä—Å—ñ—ó –º—ñ–∂ —Ä—ñ–∑–Ω–∏–º–∏ –ø–æ—Å–∞–¥–∫–æ–≤–∏–º–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏:")
        st.write("–î–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –∑–∞–¥–∞—á—ñ –æ—Ç—Ä–∏–º–∞–≤ page path (—à–ª—è—Ö –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –±–µ–∑  –∞–¥—Ä–µ—Å–∏ –¥–æ–º–µ–Ω—É —Ç–∞ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è) –∑ page_location –≤ –ø–æ–¥—ñ—ó –ø–æ—á–∞—Ç–∫—É —Å–µ—Å—ñ—ó.")
        st.write("–î–ª—è –∫–æ–∂–Ω–æ–≥–æ —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ page path –ø–æ—á–∞—Ç–∫—É —Å–µ—Å—ñ—ó –ø–æ—Ä–∞—Ö—É–≤–∞–≤ —Ç–∞–∫—ñ –º–µ—Ç—Ä–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –¥–∞–Ω–∏—Ö –∑–∞ 2020 —Ä—ñ–∫:")

        text_sql66 = "–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —Å–µ—Å—ñ–π –≤ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"
        text_sql67 = "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫"
        text_sql68 = "–ö–æ–Ω–≤–µ—Ä—Å—ñ—è –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É —Å–µ—Å—ñ—ó –≤ –ø–æ–∫—É–ø–∫—É"
    
        formatted_text16 = f"""
        <div>‚Ä¢ {text_sql66}</div>
        <div>‚Ä¢ {text_sql67}</div>
        <div>‚Ä¢ {text_sql68}</div>
        """
        st.markdown(formatted_text16, unsafe_allow_html=True)

        st.write("")

        sql_code8 = """with session_table as (
SELECT
  event_bundle_sequence_id AS session_id,
  user_pseudo_id AS user_id,
  REGEXP_REPLACE((SELECT value.string_value FROM UNNEST(event_params) WHERE key = 'page_location'), r'https?://[^/]+', '') AS page_path
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`
where _table_suffix between '20200101' and '20201231'
  and event_name = 'session_start'
LIMIT 1000),
purchase_table as (
select
  event_bundle_sequence_id AS session_id,
  user_pseudo_id AS user_id
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*`
where _table_suffix between '20200101' and '20201231'
  and event_name = 'purchase'
LIMIT 1000
)
select
  session_table.page_path,
  count(distinct session_table.session_id) as unique_sessions,
  count(distinct purchase_table.session_id) as purchase_count,
  ((count(distinct purchase_table.session_id) / 1.0) / count(distinct session_table.session_id)) * 100
from session_table
join purchase_table on purchase_table.user_id = session_table.user_id
group by session_table.page_path
"""
        st.write("")
        st.code(sql_code8, language='sql')


def python(selected_project):

    if selected_project == 'Analysis of YouTube':
        st.subheader(f"Python: Analysis of YouTube")
        st.write("")
        st.write("–Ø –ø—Ä–æ–≤—ñ–≤ –∞–Ω–∞–ª—ñ–∑ –∫–∞–Ω–∞–ª—ñ–≤ –Ω–∞ YouTube –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –º–æ–≤–∏ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è Python. –£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤ Jupyter Notebook —Ç–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏, —Ç–∞–∫—ñ —è–∫ Pandas, Matplotlib.pyplot, FuncFormatter, NumPy —Ç–∞ Folium. –ú—ñ–π –¥–∞—Ç–∞—Å–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∏–∂—á–µ:")

        dfp1 = pd.read_csv("csv_files/Global YouTube Statistics.csv", encoding='latin-1')
        st.dataframe(dfp1)

        st.write("")
        st.write("")
        st.subheader(f"1. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É —è –≤–∏–≤—ñ–≤ —Ç–æ–ø 10 —é—Ç—É–± –∫–∞–Ω–∞–ª—ñ–≤ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤")
        # st.write("1. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É —è –≤–∏–≤—ñ–≤ —Ç–æ–ø 10 —é—Ç—É–± –∫–∞–Ω–∞–ª—ñ–≤ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤")
        st.image("images/chart1.png", width=900, output_format="auto")
        st.write("–£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –º–∏ –±–∞—á–∏–º–æ, —â–æ –Ω–∞–π–±—ñ–ª—å—à–µ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ –Ω–∞ –∫–∞–Ω–∞–ª—ñ T-series. –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫—É —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –∫–æ–¥:")
        st.write("")
        code_py1 = """
        df_sorted = df.sort_values(by='subscribers', ascending=False)
top_10 = df_sorted.head(10)

plt.figure(figsize=(10, 6))
bars = plt.bar(top_10['Youtuber'], top_10['subscribers'], color='navy')
plt.xlabel('Youtuber')
plt.ylabel('Subscribers')
plt.title(f'Top 10 YouTube channels by subscribers')
plt.xticks(rotation=90, ha='right')
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e6:.0f}M'))

for bar in bars:
    yval = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2, yval, f'{yval / 1e6:.0f}M', ha='center', va='bottom')
    
plt.tight_layout()
        """
        st.code(code_py1, language='python')


        st.write("")
        st.write("")
        st.subheader(f"2. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–Ω–∞–ª—ñ–≤ —É —è–∫–∏—Ö –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ –±—ñ–ª—å—à–µ 10 –ú –ø–æ –∫–æ–∂–Ω—ñ–π –∫—Ä–∞—ó–Ω—ñ")
        st.image("images/chart3.png", width=900, output_format="auto")
        st.write("–£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –º–∏ –±–∞—á–∏–º–æ, —â–æ –Ω–∞–π–±—ñ–ª—å—à–µ —Ç–∞–∫–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤ —É –°–®–ê —Ç–∞ –Ü–Ω–¥—ñ—ó. –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫—É —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –∫–æ–¥:")
        st.write("")
        code_py2 = """
        data_10m = df[df['subscribers'] > 1e7]

channels_by_country = data_10m['Country'].value_counts().sort_index()

plt.figure(figsize=(12, 6))
plt.plot(channels_by_country.index, channels_by_country.values, marker='o', linestyle='--', color='navy')

plt.xlabel('Country')
plt.ylabel('Number of Channels')
plt.title('Number of Channels with > 10 M Subscribers by Country')

plt.grid(True)

plt.xticks(rotation=90, ha='right')

plt.tight_layout()
        """
        st.code(code_py2, language='python')


        st.write("")
        st.write("")
        st.subheader(f"3. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ —Ç–æ–ø 10 –∫–∞–Ω–∞–ª—ñ–≤ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤")
        st.image("images/chart2.png", width=900, output_format="auto")
        st.write("–£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –º–∏ –±–∞—á–∏–º–æ, —â–æ –Ω–∞–π–±—ñ–ª—å—à–µ –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤ —É –∫–∞–Ω–∞–ª—ñ T-series. –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫—É —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –∫–æ–¥:")
        st.write("")
        code_py3 = """
        sorted_df1 = df.sort_values(by='video views', ascending=False)
top_10_views = sorted_df1.head(10)

plt.figure(figsize=(10, 6))
bars = plt.bar(top_10_views['Youtuber'], top_10_views['video views'], color='navy')

plt.xlabel('Youtuber')
plt.ylabel('Video Views')
plt.title('Top 10 YouTube Channels by Video Views')

plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e9:.0f}B'))

for bar in bars:
    yval = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2, yval, f'{yval / 1e9:.0f}B', ha='center', va='bottom')

plt.xticks(rotation=90, ha='right')
plt.tight_layout()
        """
        st.code(code_py3, language='python')


        st.write("")
        st.write("")
        st.subheader(f"4. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ –¥–æ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤")
        st.image("images/chart4.png", width=900, output_format="auto")
        st.write("–Ø–∫–±–∏ —Ü–µ –Ω–µ –±—É–ª–æ –æ—á–µ–≤–∏–¥–Ω–∏–º, –∞–ª–µ –ø—Ä–∏ –º–µ–Ω—à—ñ–π –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤ - –º–µ–Ω—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤. –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫—É —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –∫–æ–¥:")
        st.write("")
        code_py4 = """
        x_column = 'subscribers'
y_column = 'video views'


plt.figure(figsize=(10, 6))
plt.scatter(df[x_column], df[y_column], alpha=0.5, color='blue')

plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e9:.0f}B'))
plt.gca().xaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e6:.0f}M'))

plt.xlabel(x_column)
plt.ylabel(y_column)
plt.title(f'{x_column} vs {y_column}')
        """
        st.code(code_py4, language='python')


        st.write("")
        st.write("")
        st.subheader(f"5. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–Ω–∞–ª—ñ–≤ –ø–æ –∫–æ–∂–Ω—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó")
        st.image("images/chart5.png", width=900, output_format="auto")
        st.write("–¢—É—Ç –º–∏ –±–∞—á–∏–º–æ, —â–æ –Ω–∞–π–±—ñ–ª—å—à–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–Ω–∞–ª—ñ–≤ —É —è–∫–∏—Ö –±–∞–≥–∞—Ç–æ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ —î –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó Music —Ç–∞ Entertainment. –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫—É —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –∫–æ–¥:")
        st.write("")
        code_py5 = """
        x_column = 'subscribers'
y_column = 'video views'


plt.figure(figsize=(10, 6))
plt.scatter(df[x_column], df[y_column], alpha=0.5, color='blue')

plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e9:.0f}B'))
plt.gca().xaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e6:.0f}M'))

plt.xlabel(x_column)
plt.ylabel(y_column)
plt.title(f'{x_column} vs {y_column}')
        """
        st.code(code_py5, language='python')


        st.write("")
        st.write("")
        st.subheader(f"6. –ù–∞ —Ü—ñ–π –∫–∞—Ä—Ç—ñ –º–∏ –º–æ–∂–µ–º–æ –ø–æ–±–∞—á–∏—Ç–∏ –Ω–∞–π–±—ñ–ª—å—à—ñ –∫–∞–Ω–∞–ª—ñ –ø–æ –∫—Ä–∞—ó–Ω–∞–º")

        data1 = dfp1[dfp1['subscribers'] > 1e7]
        data1 = data1.dropna(subset=['Latitude', 'Longitude'])

        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞–ø–∏ Folium
        map = folium.Map(location=[data1['Latitude'].mean(), data1['Longitude'].mean()], zoom_start=2)

        max_subscribers = data1.loc[data1.groupby('Country')['subscribers'].idxmax()]

        for index, row in max_subscribers.iterrows():
            folium.Marker(location=[row['Latitude'], row['Longitude']],
                          popup=f"{row['Youtuber']} - {row['subscribers']} subscribers - {row['Country']}",
                          icon=folium.Icon(color='darkblue')).add_to(map)

        # –í—Å—Ç–∞–≤–∫–∞ –º–∞–ø–∏ —É Streamlit
        folium_static(map, width=1100)

        st.write("–ù–∞–ø—Ä–∏–∫–ª–∞–¥, –≤ –£–∫—Ä–∞—ó–Ω—ñ –Ω–∞–π–±—ñ–ª—å—à–∏–π –∫–∞–Ω–∞–ª —Ü–µ Slivki Show. –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫—É —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –∫–æ–¥:")
        st.write("")
        code_py6 = """
        import folium

data1 = df[df['subscribers'] > 1e7]
data1 = data1.dropna(subset=['Latitude', 'Longitude']) # –ø—Ä–∏–±–∏—Ä–∞—î–º nan

map = folium.Map(location=[data1['Latitude'].mean(), data1['Longitude'].mean()], zoom_start=2)

max_subscribers = data1.loc[data1.groupby('Country')['subscribers'].idxmax()]

for index, row in max_subscribers.iterrows():
    folium.Marker(location=[row['Latitude'], row['Longitude']],
                  popup=f"{row['Youtuber']} - {row['subscribers']} subscribers - {row['Country']}",
                  icon=folium.Icon(color='darkblue')).add_to(map)

map
        """
        st.code(code_py6, language='python')

        
    elif selected_project == 'creation and analysis of dataset':
        st.subheader(f"Python: creation and analysis of dataset")
        st.write("")
        st.write("–£ —Ä–∞–º–∫–∞—Ö —Ü—å–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É —è —Å—Ç–≤–æ—Ä–∏–≤ –≤–ª–∞—Å–Ω–∏–π –¥–∞—Ç–∞—Å–µ—Ç, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–æ–ø-1000 —Å–≤—ñ—Ç–æ–≤–∏—Ö –∫–æ–º–ø–∞–Ω—ñ–π —Ç–∞ –Ω–∞–ø–æ–≤–Ω–∏–≤ –π–æ–≥–æ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –∑ —Ä—ñ–∑–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª. –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ —è –ø—Ä–æ–≤—ñ–≤ –∞–Ω–∞–ª—ñ–∑ —Ü—å–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç—É, –¥–æ—Å–ª—ñ–¥–∂—É—é—á–∏ –π–æ–≥–æ –∫–ª—é—á–æ–≤—ñ –∞—Å–ø–µ–∫—Ç–∏.")
        st.write("")
        st.write("–°–ø–æ—á–∞—Ç–∫—É —è –≤–∑—è–≤ –æ—Å–Ω–æ–≤–Ω–∏–π –¥–∞—Ç–∞—Å–µ—Ç, –ø—Ä–∏–±—Ä–∞–≤ –∑–∞–π–≤—ñ —Å–∏–º–≤–æ–ª–∏ —Ç–∞ —Å—Ç–≤–æ—Ä–∏–≤ 4 —Å—Ç–æ–≤–ø—á–∏–∫–∏ –∑ –ø–æ–∫–∞–∑–Ω–∏–∫–∞–º–∏:")
        st.write("")
        code_py7 = """
        import pandas as pd
        df = pd.read_csv(r"–º—ñ–π —à–ª—è—Ö.csv")

        df = df.rename(columns=lambda x: x.strip())

        def convert_to_numeric(value):
    try:
        return pd.to_numeric(value.replace('$', '').replace(',', '').replace('%', '').replace('(', '').replace(')', ''), errors='coerce')
    except ValueError:
        return np.nan

# –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö —Å—Ç–æ–≤–ø—Ü—ñ–≤
df['revenues'] = df['revenues'].apply(convert_to_numeric)
df['profits'] = df['profits'].apply(convert_to_numeric)
df['revenue_percent_change'] = df['revenue_percent_change'].apply(convert_to_numeric)
df['profits_percent_change'] = df['profits_percent_change'].apply(convert_to_numeric)
df['assets'] = df['assets'].apply(convert_to_numeric)
df['market_value'] = df['market_value'].apply(convert_to_numeric)
df['employees'] = df['employees'].apply(convert_to_numeric)

df = df.drop("change_in_rank", axis=1)

df['Average Revenue per Employee'] = df['revenues'] / df['employees'] # –°–µ—Ä–µ–¥–Ω—ñ–π –¥–æ—Ö—ñ–¥ –Ω–∞ –æ–¥–Ω–æ–≥–æ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞
df['Profit Margin'] = df['profits'] / df['revenues']  #  –ú–∞—Ä–∂–∞ –ø—Ä–∏–±—É—Ç–∫—É
df['Relative Change in Profits'] = df['profits_percent_change'] / 100  #  –í—ñ–¥–Ω–æ—Å–Ω–∞ –∑–º—ñ–Ω–∞ –ø—Ä–∏–±—É—Ç–∫—É
df['Asset Turnover'] = df['revenues'] / df['assets']  #  –û–±–æ—Ä–æ—Ç –∞–∫—Ç–∏–≤—ñ
        """
        st.code(code_py7, language='python')

        st.write("")
        st.write("–î–∞–ª—ñ –¥–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –¥–∞–Ω—ñ —Ç–∞ –∑–≤–æ–¥–∏–º–æ —Å—Ç–æ–≤–ø—á–∏–∫–∏, –ø–æ —è–∫–∏–º –±—É–¥–µ–º–æ –∑'—î–¥–Ω—É–≤–∞—Ç–∏ –¥–æ —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Ä–µ–≥—ñ—Å—Ç—Ä–∞:")
        st.write("")
        code_py8 = """
        df1 = pd.read_csv(r"–º—ñ–π —à–ª—è—Ö")
df2 = pd.read_csv(r"–º—ñ–π —à–ª—è—Ö.csv")

df1['Name'] = df1['Name'].str.lower()
df2['Name'] = df2['Name'].str.lower()
merged_df1 = pd.merge(df1, df2[['Name', 'marketcap', 'country']], on='Name', how='left')
        """
        st.code(code_py8, language='python')

        st.write("")
        st.write("–î–æ–¥–∞—î–º–æ —â–µ –¥–µ–∫—ñ–ª—å–∫–∞ —Å—Ç–æ–ø—Ü—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª —Ç–∞ –ø—Ä–∏–±–∏—Ä–∞—î–º–æ —Ä—è–¥–∫–∏ –¥–ª—è —è–∫–∏—Ö –Ω–µ –∑–Ω–∞–π—à–ª–∏—Å—å —Å–ø—ñ–ª—å–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è")
        st.write("")
        code_py9 = """
        df3 = pd.read_csv(r"–º—ñ–π —à–ª—è—Ö")
        df3['Name'] = df3['Name'].str.lower()
        merged_df2 = pd.merge(merged_df1, df3[['Name', 'cost_to_borrow']], on='Name', how='left')

        df4 = pd.read_csv(r"–º—ñ–π —à–ª—è—Ö.csv")

        df4['Name'] = df3['Name'].str.lower()
        merged_df3 = pd.merge(merged_df2, df4[['Name', 'total_debt']], on='Name', how='left')

        filtered_df_result = merged_df3[(merged_df3['country'].notna())]
        """

        st.code(code_py9, language='python')


        st.write("")
        st.write("–ß–∞—Å—Ç–∏–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞—Ç–∞—Å–µ—Ç—É –±—É–ª–∞ –∑–∞–≤–µ—Ä—à–∏–Ω–∞, –¥–∞–ª—ñ –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –∞–Ω–∞–ª—ñ–∑—É")
        dfp2 = pd.read_csv("csv_files/result.csv", encoding='latin-1')
        st.dataframe(dfp2)
        st.write("")



        st.subheader("1. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –º–æ–∂–µ–º–æ –ø–æ–±–∞—á–∏—Ç–∏ —Ç–æ–ø 10 –∫–æ–º–ø–∞–Ω—ñ–π –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤")
        st.write("")

        st.image("images/chart6.png", width=900, output_format="auto")
        st.write("")

        code_py10 = """
        import matplotlib.pyplot as plt
        from matplotlib.ticker import FuncFormatter

        df_sorted1 = filtered_df_result.sort_values(by='employees', ascending=False)
top_10_1 = df_sorted1.head(10)

plt.figure(figsize=(10, 6))
plt.bar(top_10_1['Name'], top_10_1['employees'], color='navy')
plt.xlabel('Company')
plt.ylabel('Employee')
plt.title(f'Top 10 company of employees')
plt.xticks(rotation=45, ha='right')
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e6:.1f}M'))
plt.tight_layout()
        """

        st.code(code_py10, language='python')

        st.subheader("2. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ —Ç–æ–ø 10 –∫–æ–º–ø–∞–Ω—ñ–π –∑–∞ –Ω–∞–π–±—ñ–ª—å—à–∏–º –±–æ—Ä–≥–æ–º")
        st.write("")

        st.image("images/chart7.png", width=900, output_format="auto")
        st.write("")

        code_py11 = """
        df_sorted2 = filtered_df_result.sort_values(by='total_debt', ascending=False)
top_10_2 = df_sorted2.head(10)

plt.figure(figsize=(10, 6))
plt.bar(top_10_2['Name'], top_10_2['total_debt'], color='navy')
plt.xlabel('Company')
plt.ylabel('Total debt')
plt.title(f'Top 10 company of total debts')
plt.xticks(rotation=45, ha='right')
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e9:.0f}B'))
plt.tight_layout()
        """

        st.code(code_py11, language='python')


        st.subheader("3. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ —Ç–æ–ø 10 –∫–æ–º–ø–∞–Ω—ñ–π –∑ –Ω–∞–π–±—ñ–ª—å—à–∏–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏ ")
        st.write("")

        st.image("images/chart8.png", width=900, output_format="auto")
        st.write("")

        code_py11 = """
        df_sorted3 = filtered_df_result.sort_values(by='assets', ascending=False)
top_10_3 = df_sorted3.head(10)

plt.figure(figsize=(10, 6))
plt.bar(top_10_3['Name'], top_10_3['assets'], color='navy')
plt.xlabel('Company')
plt.ylabel('Assets')
plt.title(f'Top 10 company of assets')
plt.xticks(rotation=60, ha='right')
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e6:.1f}M'))
plt.tight_layout()
        """

        st.code(code_py11, language='python')

        st.subheader("4. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ –¥–æ –¥–æ—Ö–æ–¥—É")
        st.write("")

        st.image("images/chart9.png", width=900, output_format="auto")
        st.write("")

        code_py11 = """
        x_column = 'revenues'
y_column = 'employees'


plt.figure(figsize=(10, 6))
plt.scatter(filtered_df_result[x_column], filtered_df_result[y_column], alpha=0.5, color='blue')

plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e6:.1f}M'))
plt.gca().xaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e3:.0f}K'))

plt.xlabel(x_column)
plt.ylabel(y_column)
plt.title(f'Scatter Plot: {x_column} vs {y_column}')
        """

        st.code(code_py11, language='python')


        st.subheader("5. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–∞–π–±—ñ–ª—å—à–∏—Ö –∫–æ–º–ø–∞–Ω—ñ–π –ø–æ –∫—Ä–∞—ó–Ω–∞–º")
        st.write("")

        st.image("images/chart10.png", width=900, output_format="auto")
        st.write("")

        code_py12 = """
        companiesby_country = filtered_df_result['country'].value_counts()

plt.figure(figsize=(10, 6))
companiesby_country.plot(kind='line', marker='o')
plt.title('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–ø–∞–Ω—ñ–π –≤ –∫–æ–∂–Ω—ñ–π –∫—Ä–∞—ó–Ω—ñ')
plt.xlabel('–ö—Ä–∞—ó–Ω–∞')
plt.ylabel('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–ø–∞–Ω—ñ–π')
        """

        st.code(code_py12, language='python')


        st.subheader("6. –ù–∞ —Ü—å–æ–º—É –≥—Ä–∞—Ñ—ñ–∫—É –º–∏ –±–∞—á–∏–º–æ –Ω–∞–π–¥–æ—Ä–æ–∂—á—ñ –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–∞ —Ä–∏–Ω–∫—É")
        st.write("")

        st.image("images/chart11.png", width=900, output_format="auto")
        st.write("")

        code_py13 = """
        plt.figure(figsize=(10, 6))
plt.bar(top_10_4['Name'], top_10_4['market_value'], color='navy')
plt.xlabel('Company')
plt.ylabel('market_value')
plt.title(f'Top 10 company of market_value')
plt.xticks(rotation=60, ha='right')
plt.gca().yaxis.set_major_formatter(FuncFormatter(lambda x, _: f'{x / 1e6:.1f}M'))
plt.tight_layout()
        """

        st.code(code_py13, language='python')


    elif selected_project == '–ü—Ä–æ–µ–∫—Ç 3':
        st.write("–£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –¥–∞—Ç–∞—Å–µ—Ç, –Ω–∞ –æ—Å–Ω–æ–≤—ñ —è–∫–æ–≥–æ —Å—Ç–≤–æ—Ä–∏–≤ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏, —è–∫—ñ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–ª—ñ–≤–∞")
        from dateutil.relativedelta import relativedelta


        df = pd.read_csv("csv_files/games_activity_combined.csv")
        st.dataframe(df)
        df['activity_date'] = pd.to_datetime(df['activity_date'])

        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏
        game_filter = st.sidebar.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –≥—Ä—É", df["game_activity_name"].unique())
        device_filter = st.sidebar.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–µ–≤–∞–π—Å—É", ["–°—Ç–∞—Ä–∏–π", "–ù–æ–≤–∏–π"])
        date_range = st.sidebar.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ–∞–ø–∞–∑–æ–Ω –¥–∞—Ç", [df["activity_date"].min(), df["activity_date"].max()])
        date_range = [pd.to_datetime(date) for date in date_range]
        age_range = st.sidebar.slider("–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ–∞–ø–∞–∑–æ–Ω –≤—ñ–∫—É", int(df["age"].min()), int(df["age"].max()), (20, 60))

        # –§—ñ–ª—å—Ç—Ä—É—î–º–æ –¥–∞–Ω—ñ –∑–∞ –≤–∏–±—Ä–∞–Ω–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏
        filtered_df = df[(df["game_activity_name"] == game_filter) &
                        (df["has_older_device_model"] == (device_filter == "–°—Ç–∞—Ä–∏–π")) &
                        (df["activity_date"].between(date_range[0], date_range[1])) &
                        (df["age"].between(age_range[0], age_range[1]))]

        

        # –ü–æ–±—É–¥–æ–≤–∞ –ª—ñ–Ω—ñ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é –ø–æ –¥–Ω—è—Ö
        fig_line = px.line(filtered_df.groupby("activity_date").size().reset_index(name="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"),
                          x="activity_date", y="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤",
                          title="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–æ –¥–Ω—è—Ö",
                          labels={"activity_date": "–î–∞—Ç–∞", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤": "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"})
        st.plotly_chart(fig_line)


        # 1
        fig_line_age_activity = px.line(filtered_df.groupby(["age", "game_activity_name"]).size().reset_index(name="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"),
                                x="age", y="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤",
                                color="game_activity_name",
                                title="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –≤—ñ–∫–æ–º —Ç–∞ –≥—Ä–æ—é",
                                labels={"age": "–í—ñ–∫", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤": "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"})
        st.plotly_chart(fig_line_age_activity)

        # –ü–æ–±—É–¥–æ–≤–∞ —Å—Ç–æ–≤–ø—á–∏–∫–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –º–æ–≤–æ—é
        fig_bar = px.bar(filtered_df.groupby("language").size().reset_index(name="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"),
                        x="language", y="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤",
                        title="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –º–æ–≤–æ—é",
                        labels={"language": "–ú–æ–≤–∞", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤": "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"})
        st.plotly_chart(fig_bar)

        fig_bar_age_game = px.bar(filtered_df.groupby(["age", "game_activity_name"]).size().reset_index(name="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"),
                    x="age", y="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤",
                    color="game_activity_name",
                    title="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –≤—ñ–∫–æ–º —Ç–∞ –≥—Ä–æ—é",
                    labels={"age": "–í—ñ–∫", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤": "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"})
        st.plotly_chart(fig_bar_age_game)

        # 3
        fig_pie_age = px.pie(filtered_df.groupby("age").size().reset_index(name="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"),
                            names="age", values="–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤",
                            title="–†–æ–∑–ø–æ–¥—ñ–ª –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –≤—ñ–∫–æ–º",
                            labels={"age": "–í—ñ–∫", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤": "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"})
        st.plotly_chart(fig_pie_age)

        
        fig_scatter = px.scatter(filtered_df, x="age", y=filtered_df["total_seconds"] / 3600, color="game_activity_name",
                                title="–í–∑–∞—î–º–æ–∑–≤'—è–∑–æ–∫ –≤—ñ–∫—É —Ç–∞ —á–∞—Å—É –≥—Ä–∏ (–≤ –≥–æ–¥–∏–Ω–∞—Ö)",
                                labels={"age": "–í—ñ–∫", "total_seconds": "–ß–∞—Å –≥—Ä–∏ (–≤ –≥–æ–¥–∏–Ω–∞—Ö)", "game_activity_name": "–ì—Ä–∞"})
        st.plotly_chart(fig_scatter)


    elif selected_project == 'regular expressions':
        import re

        st.subheader("regular expressions")
        
        
        def count_words(text):
            word_count = len(re.findall(r'\b[a-zA-Z–ê-–Ø–∞-—è]{2,}\b', text))
            return word_count

        def main():
            st.subheader("Word Count App")

            text0 = st.text_area("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç:", "")

            if st.button("–ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª—ñ–≤"):
  
                word_count = count_words(text0)
                st.success(f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª—ñ–≤ —É –≤–∞—à–æ–º—É —Ç–µ–∫—Å—Ç—ñ: {word_count}")

        # –ó–∞–ø—É—Å–∫ –≤–µ–±-–¥–æ–¥–∞—Ç–∫—É
        if __name__ == "__main__":
            main()

        st.write("–ö–æ–¥ —Ü—ñ—î—ó –ø—Ä–æ–≥—Ä–∞–º–∏:")
        code = """
import re

def count_words(text):
    word_count = len(re.findall(r'\b[a-zA-Z–ê-–Ø–∞-—è]{2,}\b', text))
    return word_count

def main():
    st.title("Word Count App")

    # –í–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
    text0 = st.text_area("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç:", "")

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å–ª—ñ–≤
    if st.button("–ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª—ñ–≤"):
        # –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        word_count = count_words(text0)
        st.success(f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª—ñ–≤ —É –≤–∞—à–æ–º—É —Ç–µ–∫—Å—Ç—ñ: {word_count}")

if __name__ == "__main__":
    main()
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")

        st.subheader("–ü–æ—à—É–∫ –≤—Å—ñ—Ö –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏—Ö –∞–¥—Ä–µ—Å –≤ —Ç–µ–∫—Å—Ç—ñ")
        code = """
       
pattern = r'[A-Za-z0-9._%-+]+@[A-Za-z-.]+\.[A-Za-z]+\b'

list_email = (re.findall(pattern, my_text))

for email in list_email:
    print(email)
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")

        st.subheader("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ä–æ–ª—é –Ω–µ –∑–≤–∞–∂–∞—é—á–∏ –Ω–∞ –∑–∞–π–≤—ñ —Å–∏–º–≤–æ–ª–∏ —Ç–∞ —Ä–µ–≥—ñ—Å—Ç—Ä")
        code = """
import re

password_system = 'teST34-45'

pattern = r'[^A-Za-z0-9-]+'


while True:
    password_user = re.sub(pattern, '', input('–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –∑ 9-—Ç–∏ —Å–∏–º–≤–æ–ª—ñ–≤:'))

    if password_user.lower() == password_system.lower():
        print("–ü–∞—Ä–æ–ª—å –≤—ñ—Ä–Ω–∏–π")
        break
    else:
        print("–ü–∞—Ä–æ–ª—å –Ω–µ –≤—ñ—Ä–Ω–∏–π, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑\n")
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")

        st.subheader("–¶–µ–π —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä—é—î –∞–±—Ä–µ–≤—ñ–∞—Ç—É—Ä—É –∑ –ø–µ—Ä—à–∏—Ö –±—É–∫–≤ –∫–æ–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞")
        code = """
import re
pattern = r'\b[^0-9\W]'

user_text = input('–í–≤–µ–¥—ñ—Ç—å —Ä–µ—á–µ–Ω–Ω—è: ')

word_list = ''.join(re.findall(pattern, user_text))
print(word_list.upper())
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")

        st.subheader("–í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä—ñ–≤")
        code = """
import re
my_text = '–î—É–∂–µ –ø–æ—à–∏—Ä–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø–æ–º–∏–ª–∫–∞ - —Ü–µ –ª–∏—à–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è —Å–ª–æ–≤–∞ —Å–ª–æ–≤–∞.' \
          ' –°–º—ñ—à–Ω–æ, —á–∏ —á–∏ –Ω–µ —Ç–∞–∫? –¶–µ - –∫–Ω–∏–≥–∞ –∫–Ω–∏–≥–∞—Ä–Ω—ñ.'

pattern = r'\b(\w+)\s+\1\b'

new_text = re.sub(pattern, r'\1', my_text)
print(my_text)
print()
print(new_text)
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")

        st.subheader("–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–π–≤–∏—Ö –ø—Ä–æ–±—ñ–ª—ñ–≤ —Ç–∞ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è —Ä—è–¥–∫—ñ–≤ –∑ –Ω–æ–≤–æ–≥–æ —Ä—è–¥–∫–∞")
        code = """
text = ""
pattern = '([.;!?]+)'

text_without_lines = re.sub(r'\s+', ' ', text)
print(text_without_lines)

print()

result_text = re.sub(r'([.;!?]+\s)', r'\1\n', text_without_lines)
print(result_text)
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")

        st.subheader("–ü–æ—à—É–∫ –≤—Å—ñ—Ö –≤—ñ–π—Å—å–∫–æ–≤–∏—Ö –±—Ä–∏–≥–∞–¥ –∑ —Ç–µ–∫—Å—Ç—É")
        code = """
import re
text = ""
print(re.findall(r'[0-9]+(?:th|ed)\s\b[A-Z][A-Za-z]+\b', text))
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")

        st.subheader("–ü–æ—à—É–∫ –≤—Å—ñ—Ö –¥–∞—Ç –∑ —Ç–µ–∫—Å—Ç—É")
        code = """
import re

path = r"–º—ñ–π —à–ª—è—Ö.txt"


with open(path, 'r') as file:
    text = file.read()


pattern = r'\d{4}'
dates = re.findall(pattern, text)

print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', dates)
+
pattern = r'[A-Z][a-z]+\s\d{4}'
dates = re.findall(pattern, text)

print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', dates)

pattern = r'\d{2}\s[A-Z][a-z]+\s\d{4}'
dates = re.findall(pattern, text)

print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', dates)
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")


        st.subheader("–°–∫—Ä–∏–ø—Ç —è–∫–∏–π —à—É–∫–∞—î –≤—Å—ñ –≤–µ—Ä—Å—ñ—ó Python  —É —Ç–µ–∫—Å—Ç—ñ")
        code = """
import re

path = r"–º—ñ–π —à–ª—è—Ö.txt"


with open(path, 'r') as file:
    text = file.read()


pattern = r'\bPython\s+(\d+\.\d+)\b'
result = re.findall(pattern, text)

print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result)

pattern = r'\bPython\s+(\d+\.\d+\.\d+)\b'
result1 = re.findall(pattern, text)

print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result1)
"""

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–¥—É
        st.code(code, language="python")

        
    elif selected_project == '–ü—Ä–æ–µ–∫—Ç 5':
        
      st.subheader("–ü—Ä–æ–µ–∫—Ç 5")
      st.write("–£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –¥–∞—Ç–∞—Å–µ—Ç, –Ω–∞ –æ—Å–Ω–æ–≤—ñ —è–∫–æ–≥–æ —Å—Ç–≤–æ—Ä–∏–≤ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏, —è–∫—ñ –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–ª—ñ–≤–∞")
        
      df = pd.read_csv("csv_files/Adidas Vs Nike.csv")
      st.dataframe(df)

      with st.sidebar:
          # –î–æ–¥–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏
          price_range = st.slider('–î—ñ–∞–ø–∞–∑–æ–Ω —Ü—ñ–Ω', min_value=df['Sale Price'].min(), max_value=df['Sale Price'].max(), value=(df['Sale Price'].min(), df['Sale Price'].max()))
          rating_range = st.slider('–î—ñ–∞–ø–∞–∑–æ–Ω —Ä–µ–π—Ç–∏–Ω–≥—É', min_value=0.0, max_value=5.0, value=(0.0, 5.0), step=0.1)
          selected_models = st.multiselect('–û–±–µ—Ä—ñ—Ç—å –º–æ–¥–µ–ª—ñ –∫—Ä–æ—Å—ñ–≤–æ–∫', df['Brand'].unique(), default=df['Brand'].unique())

      # –§—ñ–ª—å—Ç—Ä—É—î–º–æ –¥–∞–Ω—ñ
      filtered_data = df[(df['Sale Price'].between(price_range[0], price_range[1])) & 
                        (df['Rating'].between(rating_range[0], rating_range[1])) &
                        (df['Brand'].isin(selected_models))]

      # –¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–π—Ç–∏ –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
      # –ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–∑—Å—ñ—é–≤–∞–Ω–Ω—è
      scatter_fig = px.scatter(filtered_data, x='Rating', y='Sale Price', color='Brand', title='Scatter Plot of Rating vs Sale Price')
      st.plotly_chart(scatter_fig)

      # –ì—Ä–∞—Ñ—ñ–∫ —Å—Ç–æ–≤–ø—á–∏–∫–æ–≤–∏–π
      bar_fig = px.bar(filtered_data, x='Brand', y='Reviews', title='Bar Chart of Reviews by Brand')
      st.plotly_chart(bar_fig)

      # –ì—Ä–∞—Ñ—ñ–∫ –∫—Ä—É–≥–æ–≤–æ—ó –¥—ñ–∞–≥—Ä–∞–º–∏
      pie_fig = px.pie(filtered_data, names='Brand', title='Brand Distribution')
      st.plotly_chart(pie_fig)

      # –ì—Ä–∞—Ñ—ñ–∫ —Å—Ç–æ–≤–ø—á–∏–∫—ñ–≤ –ø—Ä–æ–¥–∞–∂—ñ–≤ –∑–∞ –º–æ–¥–µ–ª—è–º–∏
      sales_by_model = filtered_data.groupby('Brand')['Sale Price'].sum().reset_index()
      bar_sales_fig = px.bar(sales_by_model, x='Brand', y='Sale Price', title='Total Sales by Brand')
      bar_sales_fig.update_layout(xaxis_title='Brand', yaxis_title='Total Sales')
      st.plotly_chart(bar_sales_fig)

      bar_brand_sales_fig = px.bar(filtered_data.groupby('Brand')['Sale Price'].count().reset_index(), x='Brand', y='Sale Price', title='Number of Shoes Sold by Brand')
      bar_brand_sales_fig.update_layout(xaxis_title='Brand', yaxis_title='Number of Shoes Sold')
      st.plotly_chart(bar_brand_sales_fig)


      line_fig = px.line(filtered_data.groupby('Product Name')['Sale Price'].mean().reset_index(), x='Product Name', y='Sale Price', title='Average Sale Price by Shoe Model')
      line_fig.update_layout(xaxis_title='Shoe Model', yaxis_title='Average Sale Price')

      # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —à—Ä–∏—Ñ—Ç –¥–ª—è –Ω–∞–∑–≤ –º–æ–¥–µ–ª–µ–π
      line_fig.update_layout(
          xaxis=dict(tickfont=dict(size=8)),
          yaxis=dict(tickfont=dict(size=12))
      )

      # –ó–±—ñ–ª—å—à—É—î–º–æ –≥—Ä–∞—Ñ—ñ–∫ —É —à–∏—Ä–∏–Ω—É
      line_fig.update_layout(width=1000)

      st.plotly_chart(line_fig)


      # –°—Ç–≤–æ—Ä—é—î–º–æ –¥—Ä—É–≥–∏–π –≥—Ä–∞—Ñ—ñ–∫
      discount_fig = px.line(filtered_data.groupby('Product Name')['Discount'].mean().reset_index(), x='Product Name', y='Discount', title='Average Discount by Shoe Model')
      discount_fig.update_layout(xaxis_title='Shoe Model', yaxis_title='Average Discount')

      # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —à—Ä–∏—Ñ—Ç –¥–ª—è –Ω–∞–∑–≤ –º–æ–¥–µ–ª–µ–π
      discount_fig.update_layout(
          xaxis=dict(tickfont=dict(size=8)),
          yaxis=dict(tickfont=dict(size=12))
      )

      # –ó–±—ñ–ª—å—à—É—î–º–æ –≥—Ä–∞—Ñ—ñ–∫ —É —à–∏—Ä–∏–Ω—É
      discount_fig.update_layout(width=1000)

      st.plotly_chart(discount_fig)






      
        

        





       







       

        


def visualization(selected_project):

    if selected_project == 'Tableau':
        st.markdown("## [Tableau - 1](https://public.tableau.com/app/profile/.12596403/viz/Homework_6-2/Homework22)")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –¥–∞—Ç–∞—Å–µ—Ç:")
        
        df1 = pd.read_csv("csv_files/saas_revenue.csv")
        st.dataframe(df1)

        st.write("")
        st.write("–£ –≤–æ—Ä–∫–±—É—Ü—ñ Tableau —Å—Ç–≤–æ—Ä–∏–≤ –æ–±—á–∏—Å–ª—é–≤–∞–Ω—ñ –ø–æ–ª—è –¥–ª—è —Ç–∞–∫–∏—Ö –º–µ—Ç—Ä–∏–∫:")

        sentences_t1 = [
        "Total Revenue",
        "Paid Users count",
        "Average Revenue Per Paid Users"
        ]

        form_text_t1 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t1]) + "</div>"
        st.markdown(form_text_t1, unsafe_allow_html=True)

        st.write("")

        st.write("–ü—ñ—Å–ª—è —Ü—å–æ–≥–æ —Å—Ç–≤–æ—Ä–∏–≤ –Ω–∞—Å—Ç—É–ø–Ω—ñ –¥—ñ–∞–≥—Ä–∞–º–∏:")

        sentences_t2 = [
        "–î—ñ–∞–≥—Ä–∞–º–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –≤—ñ–∑—É–∞–ª—å–Ω–æ –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ –∑–∞–≥–∞–ª—å–Ω–µ Revenue –¥–ª—è –∫–æ–∂–Ω–æ—ó –∑ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π –ª–æ–∫–∞—Ü—ñ—è + –ø—Ä–æ–¥—É–∫—Ç.",
        "–î—ñ–∞–≥—Ä–∞–º–∞, —â–æ –¥–æ–∑–≤–æ–ª—è—î –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ –∑–∞–≥–∞–ª—å–Ω–µ Revenue –ø–æ –∫–æ–∂–Ω—ñ–π –∑ –ª–æ–∫–∞—Ü—ñ–π.",
        "–î—ñ–∞–≥—Ä–∞–º–∞, –Ω–∞ —è–∫—ñ–π –≤–∫–∞–∑–∞–Ω–æ –∑–∞–≥–∞–ª—å–Ω–µ Revenue –ø–æ –º—ñ—Å—è—Ü—è—Ö –∑ —Ä–æ–∑–±–∏–≤–∫–æ—é –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–º.",
        "–î—ñ–∞–≥—Ä–∞–º–∞, —â–æ –ø–æ–∫–∞–∑—É—î ARPPU —Ç–∞ Paid Users –°ount –ø–æ–º—ñ—Å—è—á–Ω–æ.",
        "Box plot –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Å—É–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.",
        "–¥—ñ–∞–≥—Ä–∞–º—É, —â–æ –ø–æ–∫–∞–∑—É—î —è–∫ –∑–º—ñ–Ω—é—î—Ç—å—Å—è —á–∞—Å—Ç–∫–∞ –∫–æ–∂–Ω–æ—ó –ª–æ–∫–∞—Ü—ñ—ó –≤ Revenue –∑ —á–∞—Å–æ–º."
        ]

        form_text_t2 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t2]) + "</div>"
        st.markdown(form_text_t2, unsafe_allow_html=True)

        st.write("")
        st.write("–°—Ç–≤–æ—Ä–∏–≤ –¥–∞—à–±–æ—Ä–¥ –∑ –≥–æ–ª–æ–≤–Ω–∏–º–∏ –≥—Ä–∞—Ñ—ñ–∫–∞–º–∏, –Ω–∞ –º–æ—é –¥—É–º–∫—É. –î–æ–¥–∞–≤ —Ñ—ñ–ª—å—Ç—Ä–∏ –∑ –ª–æ–∫–∞—Ü—ñ—î—é, –ø—Ä–æ–¥—É–∫—Ç–æ–º —Ç–∞ –¥–∞—Ç–æ—é.")

        st.write("")
        st.image("images/tableau1.jpg", output_format="auto")
        st.write("")


        st.markdown("## [Tableau - 2](https://public.tableau.com/app/profile/.12596403/viz/Homework_6-3/Dashboard12)")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –¥–∞—Ç–∞—Å–µ—Ç:")
        
        df2 = pd.read_csv("csv_files/games_activity_combined.csv")
        st.dataframe(df2)

        st.write("")
        st.write("–í –Ω–æ–≤–æ–º—É –≤–æ—Ä–∫–±—É—Ü—ñ —Å—Ç–≤–æ—Ä–∏–≤ —Ç—Ä–∏ –∞—Ä–∫—É—à—ñ:")
        st.write("–ê—Ä–∫—É—à 1. –ó —Ä–æ–∑–±–∏–≤–∫–æ—é –ø–æ–º—ñ—Å—è—á–Ω–æ –≤–∏–≤—ñ–≤ –¥–≤—ñ –º–µ—Ç—Ä–∏–∫–∏:")

        sentences_t3 = [
        "–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —ñ–≥–æ—Ä.",
        "–í—ñ–¥—Å–æ—Ç–æ–∫ –≤—ñ–¥ –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —â–æ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ –±—É–¥—å-—è–∫—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —á–∞—Å—É –≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è—Ö, –ø–æ–≤—ó—è–∑–∞–Ω–∏—Ö –∑ ‚ÄúBattle pass‚Äù."
        ]

        form_text_t3 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t3]) + "</div>"
        st.markdown(form_text_t3, unsafe_allow_html=True)

        st.write("")

        st.write("–ê—Ä–∫—É—à 2. –ó —Ä–æ–∑–±–∏–≤–∫–æ—é –ø–æ–º—ñ—Å—è—á–Ω–æ –≤–∏–≤—ñ–≤ —Å–µ—Ä–µ–¥–Ω—ñ–π –Ω–∞ –≥—Ä–∞–≤—Ü—è —á–∞—Å, –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–π —É –≥—Ä—ñ.")

        sentences_t4 = [
        "–î–æ –∞—Ä–∫—É—à–∞ –¥–æ–¥–∞–≤ Label –∑ —Å–µ—Ä–µ–¥–Ω—å–æ—é –Ω–∞ –≥—Ä–∞–≤—Ü—è –∫—ñ–ª—å–∫—ñ—Å—Ç—é –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤–∏–ª–∏–Ω, –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö —É –≥—Ä—ñ.",
        "–ó—Ä–æ–±–∏–≤ Label —Ç–µ–∫—Å—Ç–æ–≤–∏–º –ø–æ–ª–µ–º —ñ –≤—ñ–¥–æ–±—Ä–∞–∑–∏–≤ —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ ‚Äú–∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω: –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω‚Äù‚ÄúHH:MM‚Äù"
        ]

        form_text_t4 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t4]) + "</div>"
        st.markdown(form_text_t4, unsafe_allow_html=True)

        st.write("–ê—Ä–∫—É—à 3. –°—Ç–≤–æ—Ä–∏–≤ —Ç–µ–ø–ª–æ–≤—É –∫–∞—Ä—Ç—É –∑ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ —Å–µ—Ä–µ–¥–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å —á–∞—Å—É –ø—Ä–æ–≤–µ–¥–µ–Ω–æ–≥–æ –≤ –≥—Ä—ñ –∑–∞ –≤–∏–º—ñ—Ä–∞–º–∏:")

        sentences_t5 = [
        "–í—ñ–∫–æ–≤–∞ –≥—Ä—É–ø–æ—é –≥—Ä–∞–≤—Ü—ñ–≤ –∑ –∫—Ä–æ–∫–æ–º –≤ 5 —Ä–æ–∫—ñ–≤. ",
        "–ö–≤–∞—Ä—Ç–∞–ª –¥–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ"
        ]

        form_text_t5 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t5]) + "</div>"
        st.markdown(form_text_t5, unsafe_allow_html=True)

        st.write("–ó—ñ–±—Ä–∞–≤ –≤—Å—ñ —Ç—Ä–∏ –∞—Ä–∫—É—à–∞ –≤ –æ–¥–Ω–æ–º—É –¥–∞—à–±–æ—Ä–¥—ñ —Ç–∞ –¥–æ–¥–∞–≤ —Ñ—ñ–ª—å—Ç—Ä–∏:")

        sentences_t6 = [
        "–î–∞—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ",
        "–í—ñ–∫–æ–≤–∞ –≥—Ä—É–ø–∞",
        "–ù–∞–∑–≤–∞ –≥—Ä–∏",
        "–ú–æ–≤–∞ –¥–µ–≤–∞–π—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"
        ]

        form_text_t6 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t6]) + "</div>"
        st.markdown(form_text_t6, unsafe_allow_html=True)

        st.write("")
        st.image("images/tableau2.jpg", output_format="auto")
        st.write("")

        st.markdown("## [Tableau - 3](https://public.tableau.com/app/profile/.12596403/viz/Homework3bonus_16947992656080/Dashboard1)")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —ñ–Ω—à–∏–π –¥–∞—Ç–∞—Å–µ—Ç")

        st.write("")
        st.write("–í –Ω–æ–≤–æ–º—É –≤–æ—Ä–∫–±—É—Ü—ñ —Å—Ç–≤–æ—Ä–∏–≤ —Ç—Ä–∏ –∞—Ä–∫—É—à—ñ:")
        st.write("")
        st.write("–ê—Ä–∫—É—à 1. –°–µ—Ä–µ–¥–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤, —â–æ –π–¥—É—Ç—å –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É –¥–æ—Å—Ç–∞–≤–∫–∏ (Ship mode)")
        st.write("–ê—Ä–∫—É—à 2. –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å –≤ —Ä–æ–∑–±–∏–≤—Ü—ñ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –¥–Ω—ñ–≤ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∑–∞ 0 –¥–Ω—ñ–≤ - X –∑–∞–º–æ–≤–ª–µ–Ω—å, –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∑–∞ 1 –¥–µ–Ω—å - Y –∑–∞–º–æ–≤–ª–µ–Ω—å")
        st.write("–ê—Ä–∫—É—à 3. –°–µ—Ä–µ–¥–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤, —â–æ –π–¥—É—Ç—å –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –∫–æ–∂–Ω–æ–º—É —à—Ç–∞—Ç—ñ –≤ –°–®–ê, –∑ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—î—é –Ω–∞ –º–∞–ø—ñ —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –≥—Ä–∞–¥—ñ—î–Ω—Ç—É.")
        st.write("")
        st.write("–ó—ñ–±—Ä–∞–≤ —Ç—Ä–∏ –∞—Ä–∫—É—à–∞ –≤ –æ–¥–Ω–æ–º—É –¥–∞—à–±–æ—Ä–¥—ñ —Ç–∞ –¥–æ–¥–∞–≤ —Ñ—ñ–ª—å—Ç—Ä–∏:")

        sentences_t7 = [
        "–î–∞—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
        "–°–µ–≥–º–µ–Ω—Ç",
        "–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏"
        ]

        form_text_t7 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t7]) + "</div>"
        st.markdown(form_text_t7, unsafe_allow_html=True)

        st.write("")
        st.image("images/tableau3.jpg", output_format="auto")
        st.write("")


        st.markdown("## [Tableau - 4](https://public.tableau.com/app/profile/.12596403/viz/Homework4_16948736309800/Cohortanalysis)")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ –º–∏–Ω—É–ª–∏–π –¥–∞—Ç–∞—Å–µ—Ç –∑ Tableau - 1")

        st.write("")
        st.write("–ê—Ä–∫—É—à 1. New MRR - —Å—É–º–∞ revenue, —â–æ –±—É–ª–∞ –æ—Ç—Ä–∏–º–∞–Ω–∞ –≤—ñ–¥ –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—Ä–æ—Ç—è–≥–æ–º —Ç–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –º—ñ—Å—è—Ü—è, –∫–æ–ª–∏ –≤–æ–Ω–∏ —Å—Ç–∞–ª–∏ –ø–ª–∞—Ç–Ω–∏–º–∏.")
        st.write("–ê—Ä–∫—É—à 2. Total Revenue –Ω–∞ –æ–¥–Ω—ñ–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ñ–π –æ—Å—ñ —Ç–∞ –∑–º—ñ–Ω–∞ Total Revenue —É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –º—ñ—Å—è—Ü—è –Ω–∞ –¥—Ä—É–≥—ñ–π –æ—Å—ñ.")
        st.write("–ê—Ä–∫—É—à 3. –¢–∞–±–ª–∏—Ü—è –¥–ª—è –∫–æ–≥–æ—Ä—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É Revenue –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:")
        sentences_t8 = [
        "–í —Ä—è–¥–∫–∞—Ö –ø–µ—Ä—à–∏–π –º—ñ—Å—è—Ü—å, –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–∞–≤ –ø–ª–∞—Ç–Ω–∏–º.",
        "–í —Å—Ç–æ–≤–ø—á–∏–∫–∞—Ö - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º—ñ—Å—è—Ü—ñ–≤, —â–æ –ø—Ä–æ–π—à–ª–∞ –≤—ñ–¥ –ø–µ—Ä—à–æ–≥–æ –º—ñ—Å—è—Ü—è –æ–ø–ª–∞—Ç–∏ (—Ç–æ–±—Ç–æ –≤—ñ–¥ –º—ñ—Å—è—Ü—è —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–º—É —Ä—è–¥–∫—É).",
        "–í —Ç–∞–±–ª–∏—Ü—ñ –≤–∏–≤–æ–¥—è—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è Total Revenue —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –ø–µ—Ä—ñ–æ–¥ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó –∫–æ–≥–æ—Ä—Ç–∏.",
        "–¢–∞–±–ª–∏—Ü—è –∑–∞–ª–∏—Ç–∞ –≥—Ä–∞–¥—ñ—î–Ω—Ç–æ–º –∑–∞ –ø–æ–∫–∞–∑–Ω–∏–∫–æ–º —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è —Å—É–º–∏ Revenue —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ–π –∫–ª—ñ—Ç–∏–Ω—ñ –¥–æ —Å—É–º–∏ Revenue –≤ –ø–µ—Ä—à–∏–π –º—ñ—Å—è—Ü—å –∫–æ–≥–æ—Ä—Ç–∏."
        ]

        form_text_t8 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t8]) + "</div>"
        st.markdown(form_text_t8, unsafe_allow_html=True)

        st.write("")
        st.write("–ó—ñ–±—Ä–∞–≤ —Ç—Ä–∏ –∞—Ä–∫—É—à–∞ –≤ –æ–¥–Ω–æ–º—É –¥–∞—à–±–æ—Ä–¥—ñ —Ç–∞ –¥–æ–¥–∞–≤ –¥–æ –¥–∞—à–±–æ—Ä–¥—É —Ñ—ñ–ª—å—Ç—Ä–∏ –∑–∞ –ª–æ–∫–∞—Ü—ñ—î—é —Ç–∞ –¥–∞—Ç–æ—é.")

        st.write("")
        st.image("images/tableau4.jpg", output_format="auto")
        st.write("")

        st.markdown("## [Tableau - 5](https://public.tableau.com/app/profile/.12596403/viz/Homework5_16953255791190/Dashboard1_1)")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ç–∞–∫–∏–π –¥–∞—Ç–∞—Å–µ—Ç")

        df3 = pd.read_csv("csv_files/onboarding_funnel_product.csv")
        st.dataframe(df3)
        st.write("")
        st.write("–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –¥–∞–Ω—ñ –∑ —Ñ–∞–π–ª—É, —Å—Ç–≤–æ—Ä–∏–≤ –¥–∞—à–±–æ—Ä–¥ –∑ —Ç–∞–∫–∏–º–∏ —Å–∫–ª–∞–¥–æ–≤–∏–º–∏:")
        st.write("1. –¢—Ä–∏ –æ–∫—Ä–µ–º–∏—Ö –±–ª–æ–∫–∞ –∑ —á–∏—Å–ª–∞–º–∏:")

        sentences_t9 = [
        "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤",
        "–∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —â–æ –ø–æ—á–∞–ª–∏ trial –ø–µ—Äi–æ–¥",
        "–∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —â–æ –æ–ø–ª–∞—Ç–∏–ª–∏."
        ]

        form_text_t9 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_t9]) + "</div>"
        st.markdown(form_text_t9, unsafe_allow_html=True)

        st.write("")
        st.write("2. –ì—Ä–∞—Ñ—ñ–∫ –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ–π —Ç–∞ –∫–æ–Ω–≤–µ—Ä—Å—ñ—î—é –∑ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –≤ trial –≤ –∫–æ–∂–Ω–æ–º—É –º—ñ—Å—è—Ü—ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.")
        st.write("3. –ì—Ä–∞—Ñ—ñ–∫ –∑ —Å–µ—Ä–µ–¥–Ω—å–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –¥–Ω—ñ–≤ –≤—ñ–¥ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –¥–æ –æ–ø–ª–∞—Ç–∏ –≤ –∫–æ–∂–Ω–æ–º—É –º—ñ—Å—è—Ü—ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.")
        st.write("4. –î—ñ–∞–≥—Ä–∞–º—É —É –≤–∏–≥–ª—è–¥—ñ –≤–æ—Ä–æ–Ω–∫–∏, —â–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ –∫—Ä–æ–∫—ñ–≤ –∑ —Ñ–∞–π–ª–∞.")
        st.write("5. –î–æ–¥–∞–≤ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ –¥–æ –¥–∞—à–±–æ—Ä–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Actions —Ç–∞ Parameters. –ö–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –¥–∞—à–±–æ—Ä–¥–∞ –∫–ª—ñ–∫–∞—î –ø–æ –ø–µ–≤–Ω–æ–º—É –±–ª–æ–∫—É –∑ —Ü–∏—Ñ—Ä–∞–º–∏ - –≥—Ä–∞—Ñ—ñ–∫ –ø–µ—Ä–µ–±—É–¥–æ–≤—É—î—Ç—å—Å—è")

        st.write("")
        st.image("images/tableau5.jpg", output_format="auto")
        st.write("")
        





    elif selected_project == 'Power BI':
        st.subheader(f"Power BI")
        st.write("In progress...")


    elif selected_project == 'Looker studio':
        st.markdown("## [Looker studio](https://lookerstudio.google.com/reporting/cb4dd091-e015-499f-8cb3-03bed143b0ea)")
        st.write("")
        st.write("–í Google Looker Studio —Å—Ç–≤–æ—Ä–∏–≤ –Ω–æ–≤–∏–π –∑–≤—ñ—Ç —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–≤ –¥–∂–µ—Ä–µ–ª–æ –¥–∞–Ω–∏—Ö:")
        st.write("–í –∑–≤—ñ—Ç—ñ —Å—Ç–≤–æ—Ä–∏–≤ –Ω–æ–≤—ñ –ø–æ–ª—è:")

        text_looker1 = "–°—É–º–∞ Ad Spend"
        text_looker2 = "CPC"
        text_looker3 = "CPM"
        text_looker4 = "CTR"
        text_looker5 = "ROMI"
    
        form_text_looker1 = f"""
        <div>‚Ä¢ {text_looker1}</div>
        <div>‚Ä¢ {text_looker2}</div>
        <div>‚Ä¢ {text_looker3}</div>
        <div>‚Ä¢ {text_looker4}</div>
        <div>‚Ä¢ {text_looker5}</div>
        """
        st.markdown(form_text_looker1, unsafe_allow_html=True)

        st.write("")

        st.write("–í –¥–∞—à–±–æ—Ä–¥ –¥–æ–¥–∞–≤ —Ç—Ä–∏ —á–∞—Ä—Ç–∏:")

        text_looker6 = "–ö–æ–º–±—ñ–Ω–æ–≤–∞–Ω—É –¥—ñ–∞–≥—Ä–∞–º—É –∑ –¥–∞—Ç–æ—é –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏ –Ω–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ñ–π –æ—Å—ñ, —Ç–∞ –∑ —Å—É–º–æ—é Ad Spend —Ç–∞ ROMI –∑–∞ –∫–æ–∂–µ–Ω –º—ñ—Å—è—Ü—å –Ω–∞ –¥–≤–æ—Ö –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∏—Ö –æ—Å—è—Ö"
        text_looker7 = "–õ—ñ–Ω—ñ–π–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∑ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–∞–º–ø–∞–Ω—ñ–π –≤ –∫–æ–∂–µ–Ω –º—ñ—Å—è—Ü—å –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏."
        text_looker8 = "–¢–∞–±–ª–∏—Ü—é –∑—ñ —Å—Ç–æ–≤–ø—á–∏–∫–∞–º–∏ —Ç–∞ —Ç–µ–ø–ª–æ–≤–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏, –¥–µ —É —è–∫–æ—Å—Ç—ñ dimension –≤–∏—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞–∑–≤–∞ –∫–∞–º–ø–∞–Ω—ñ—ó, –∞ —É —è–∫–æ—Å—Ç—ñ –º–µ—Ç—Ä–∏–∫ - —Å—É–º–∞—Ä–Ω–∏–π Ad Spend, CPC, CPM, CTR, ROMI."
    
        form_text_looker2 = f"""
        <div>‚Ä¢ {text_looker6}</div>
        <div>‚Ä¢ {text_looker7}</div>
        <div>‚Ä¢ {text_looker8}</div>
        """
        st.markdown(form_text_looker2, unsafe_allow_html=True)

        st.write("")

        st.write("–î–æ–¥–∞–≤ –¥–æ –∑–≤—ñ—Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∏ –∑–∞ –Ω–∞–∑–≤–æ—é –∫–∞–º–ø–∞–Ω—ñ–π —Ç–∞ –∑–∞ –¥–∞—Ç–æ—é –ø–æ–∫–∞–∑—É —Ä–µ–∫–ª–∞–º–∏.")

        st.write("")
        st.image("images/Looker1.png", output_format="auto")


    elif selected_project == 'Amplitude':
        st.subheader(f"Amplitude")
        st.write("")
        st.write("–£ Demo Amplitude –æ–±—Ä–∞–≤ –ø—Ä–æ—î–∫—Ç Media Streaming - Analytics —Ç–∞ —Å—Ç–≤–æ—Ä–∏–≤ –∫–æ–≥–æ—Ä—Ç—É, —â–æ –∑–∞–¥–∞–Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:")

        sentences_a1 = [
        "–ö—Ä–∞—ó–Ω–∞: –°–®–ê",
        "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: iOS –∞–±–æ Android",
        "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ, —â–æ –≤–ø–µ—Ä—à–µ –≤–∏–∫–æ–Ω–∞–ª–∏ –¥—ñ—é Welcome –ø—Ä–æ—Ç—è–≥–æ–º —á–µ—Ä–≤–Ω—è 2023"
        ]

        form_text_a1 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences_a1]) + "</div>"
        st.markdown(form_text_a1, unsafe_allow_html=True)

        st.write("")
        st.image("images/amp0.jpg", output_format="auto")
        st.write("")
        
        st.write("–ù–∞ –æ—Å–Ω–æ–≤—ñ —Ü—ñ—î—ó –∫–æ–≥–æ—Ä—Ç–∏ —Å—Ç–≤–æ—Ä–∏–≤ –Ω–∞—Å—Ç—É–ø–Ω—ñ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó:")
        st.write("1. –í–æ—Ä–æ–Ω–∫–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ Welcome - User Sign Up - Main Landing Screen - Search Song or Video - Play Song or Video, —Ä–æ–∑–±–∏—Ç–∞ –∑–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ—é")

        st.write("")
        st.image("images/Amp1.jpg", output_format="auto")
        st.write("")

        st.write("2. –ö–æ–Ω–≤–µ—Ä—Å—ñ—è —É –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –≤–æ—Ä–æ–Ω–∫–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥—É –ø–æ–¥–µ–Ω–Ω–æ, —Ä–æ–∑–±–∏—Ç–∞ –∑–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ—é")

        st.write("")
        st.image("images/Amp2.jpg", output_format="auto")
        st.write("")

        st.write("3. –ß–∞—Å, –∑–∞ —è–∫–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –ø–æ–¥–µ–Ω–Ω–æ, —Ä–æ–∑–±–∏—Ç–∏–π –∑–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ—é")

        st.write("")
        st.image("images/Amp3.jpg", output_format="auto")
        st.write("")

        st.write("4. –î–∏–Ω–∞–º—ñ–∫–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —â–æ –≤–∏–∫–æ–Ω—É—é—Ç—å Play Song or Video —Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —â–æ –≤–∏–∫–æ–Ω—É—é—Ç—å –±—É–¥—å-—è–∫–∏–π –∞–∫—Ç–∏–≤–Ω–∏–π —ñ–≤–µ–Ω—Ç –ø–æ–¥–µ–Ω–Ω–æ")

        st.write("")
        st.image("images/Amp4.jpg", output_format="auto")
        st.write("")

        st.write("5. –°–µ—Ä–µ–¥–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–≤–µ–Ω—Ç—ñ–≤ –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–æ–¥–µ–Ω–Ω–æ: –±—É–¥—å-—è–∫–∏–π –∞–∫—Ç–∏–≤–Ω–∏–π —ñ–≤–µ–Ω—Ç —Ç–∞ Play Song or Video")

        st.write("")
        st.image("images/Amp5.jpg", output_format="auto")
        st.write("")

        st.write("6. –ì—Ä–∞—Ñ—ñ–∫ Retention –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —ñ–≤–µ–Ω—Ç—É Welcome –≤ –±—É–¥—å-—è–∫–∏–π –∞–∫—Ç–∏–≤–Ω–∏–π —ñ–≤–µ–Ω—Ç —Ç–∞ Play Song or Video —É –≤–∏–≥–ª—è–¥—ñ —Å—Ç–æ–≤–ø—á–∏–∫–æ–≤–æ—ó –¥—ñ–∞–≥—Ä–∞–º–∏")

        st.write("")
        st.image("images/Amp6.jpg", output_format="auto")
        st.write("")

        st.write("7. –°—Ç–≤–æ—Ä–∏–≤ Journey Map –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥ —Å—Ç–∞—Ä—Ç—É —Å–µ—Å—ñ—ó –¥–æ Play Song or Video.")

        st.write("")
        st.image("images/Amplitude_+.jpg", output_format="auto")
        st.write("")

def google_sheets(selected_project):
    
    if selected_project == '–ü—Ä–æ–µ–∫—Ç 1':
        st.markdown("## [–ü—Ä–æ–µ–∫—Ç 1](https://docs.google.com/spreadsheets/d/1WI4--LgLHITuZwYX_EVYSmZLmvElRT41s8-btiXiGL4/edit?usp=sharing)")
        
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —è —Ä–∞—Ö—É–≤–∞–≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ñ –º–µ—Ç—Ä–∏–∫–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Google Sheets —Ç–∞ –æ—Ü—ñ–Ω—é–≤–∞–≤ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –≤–∏—Ç—Ä–∞—Ç –Ω–∞ –∑–∞–ª—É—á–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤. –ê —Å–∞–º–µ:")

        text_google1 = "Total revenue - –∑–∞–≥–∞–ª—å–Ω–∏–π revenue –≥—Ä–∏."
        text_google2 = "Paid users count - –∑–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —â–æ –ø–ª–∞—Ç—è—Ç—å."
        text_google3 = "CR to Paid - –∫–æ–Ω–≤–µ—Ä—Å—ñ—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –≤ –ø–ª–∞—Ç–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö."
        text_google4 = "ARPPU - —Å–µ—Ä–µ–¥–Ω—ñ–π revenue –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–∏–π –ø–ª–∞—Ç–∏—Ç—å."
        text_google5 = "Average Age (paid users) - —Å–µ—Ä–µ–¥–Ω—ñ–π –≤—ñ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –ø–ª–∞—Ç—è—Ç—å."
        text_google6 = "Median age (paid users) - –º–µ–¥—ñ–∞–Ω–Ω–∏–π –≤—ñ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –ø–ª–∞—Ç—è—Ç—å."
        text_google7 = "Minimum age (paid users) - –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –≤—ñ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –ø–ª–∞—Ç—è—Ç—å."
        text_google8 = "Maximum age (paid users) - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –≤—ñ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –ø–ª–∞—Ç—è—Ç—å."
    
        form_text_google1 = f"""
        <div>‚Ä¢ {text_google1}</div>
        <div>‚Ä¢ {text_google2}</div>
        <div>‚Ä¢ {text_google3}</div>
        <div>‚Ä¢ {text_google4}</div>
        <div>‚Ä¢ {text_google5}</div>
        <div>‚Ä¢ {text_google6}</div>
        <div>‚Ä¢ {text_google7}</div>
        <div>‚Ä¢ {text_google8}</div>
        """
        st.markdown(form_text_google1, unsafe_allow_html=True)

        st.write("")
        st.write("–î–æ–¥–∞–≤ —Å—Ç—Ä–æ–∫—É ‚ÄúTotal‚Äù –∑ –∑–∞–≥–∞–ª—å–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –∫–æ–∂–Ω–æ—ó –º–µ—Ç—Ä–∏–∫–∏ –ø–æ –≤—Å—ñ–º –ø—Ä–æ–¥—É–∫—Ç–∞–º –æ–¥–Ω–æ—á–∞—Å–Ω–æ")
        st.write("")
        st.image("images/google sheets.jpg", output_format="auto")
        st.write("")

        st.write("–£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤ —Ç–∞–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:")

        sentences = [
        "SUM",
        "SUMIF",
        "COUNTIF",
        "AVERAGEIF",
        "AVERAGE",
        "MEDIAN",
        "MIN",
        "MINIFS",
        "MAX",
        "MAXIFS"
        ]

        form_text_google2 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences]) + "</div>"
        st.markdown(form_text_google2, unsafe_allow_html=True)

        st.write("")

        st.write("–¢–∞–∫–æ–∂,  –∑–Ω–∏–∑—É –ø—ñ–¥ —Ç–∞–±–ª–∏—Ü–µ—é –Ω–∞–ø–∏—Å–∞–≤ –≤–∏—Å–Ω–æ–≤–∫–∏ –Ω–∞ —Ç–∞–∫—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è:")

        sentences1 = [
        "–ß–æ–º—É —ñ–≥—Ä–∏ –ø—ñ–¥ –Ω–æ–º–µ—Ä–æ–º 1 —ñ 2 –º–æ–∂—É—Ç—å –º–∞—Ç–∏ –Ω–∏–∂—á—É CR to Paid –∫–æ–Ω–≤–µ—Ä—Å—ñ—é –≤ –æ–ø–ª–∞—Ç—É?",
        "–£ —á–æ–º—É –º–æ–∂–µ –ø–æ–ª—è–≥–∞—Ç–∏ –ø—Ä–∏—á–∏–Ω–∞ —Ä—ñ–∑–Ω–∏—Ü—ñ ARPPU –º—ñ–∂ —ñ–≥—Ä–∞–º–∏?",
        "–Ø–∫ –±–∏ —Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∏–≤ —Å–≤–æ—ó –≥—ñ–ø–æ—Ç–µ–∑–∏?",
        "–Ø–∫—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —Ç–∏ –ºi–≥ –±–∏ –¥–∞—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º –≥—Ä–∏ –Ω–æ–º–µ—Ä 2?"
        ]

        form_text_google3 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences1]) + "</div>"
        st.markdown(form_text_google3, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets1.jpg", output_format="auto")

    elif selected_project == '–ü—Ä–æ–µ–∫—Ç 2':
        st.markdown("## [–ü—Ä–æ–µ–∫—Ç 2](https://docs.google.com/spreadsheets/d/1wG7KmAhwDI026dpEWBgSbs3239hBSvbWDSrsfDkr7K4/edit?usp=sharing)")
        st.write("")
        st.write("–£ —Ñ–∞–π–ª—ñ –Ω–∞ –ª–∏—Å—Ç—ñ ‚Äúactive users‚Äù –¥–ª—è –≤—ñ–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –≤–∏–∑–Ω–∞—á–∏–≤:")

        sentences2 = [
        "–°–µ—Ä–µ–¥–Ω—ñ–π –≤—ñ–∫",
        "Standard deviation (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–µ –≤i–¥—Ö–∏–ª–µ–Ω–Ω—è)",
        "–ú–µ–¥—ñ–∞–Ω—É",
        "–Ünterquartile range (i–Ω—Ç–µ—Ä–∫–≤–∞—Ä—Ç–∏–ª—å–Ω–∏–π —Ä–æ–∑–º–∞—Ö)",
        "10 –ø–µ—Ä—Ü–µ–Ω—Ç–∏–ª—å –≤—ñ–∫—É",
        "90 –ø–µ—Ä—Ü–µ–Ω—Ç–∏–ª—å –≤—ñ–∫—É"
        ]

        form_text_google4 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences2]) + "</div>"
        st.markdown(form_text_google4, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets2.jpg", output_format="auto")
        st.write("")

        st.write("–†–æ–∑—Ä–∞—Ö—É–≤–∞–≤ DAU, WAU —Ç–∞ stickiness –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤. –î–ª—è —Ü—å–æ–≥–æ:")

        sentences3 = [
        "–ù–∞ –ª–∏—Å—Ç—ñ ‚Äúactivity‚Äù –¥–æ–¥–∞–≤  –∫–æ–ª–æ–Ω–∫—É week_start_date. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤ —Ñ–æ—Ä–º—É–ª–∏ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –¥–∞—Ç–∏ –ø–æ—á–∞—Ç–∫—É —Ç–∏–∂–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ—ó –¥–∞—Ç–∏ —É –∫–æ–ª–æ–Ω—Ü—ñ activity_date.",
        "–°—Ç–≤–æ—Ä–∏–≤ –ª–∏—Å—Ç ‚ÄúDAU‚Äù –∑ –∫–æ–ª–æ–Ω–∫–æ—é activity_date. –£ —Ü—ñ–π –∫–æ–ª–æ–Ω—Ü—ñ –≤–∏–≤—ñ–≤ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –¥–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ (activity_date) –∑ –ª–∏—Å—Ç–∞ ‚Äúactivity.",
        "–°—Ç–≤–æ—Ä–∏–≤ –Ω–∞ –ª–∏—Å—Ç—ñ ‚ÄúDAU‚Äù –∫–æ–ª–æ–Ω–∫—É DAU —ñ –≤–∏–≤—ñ–≤ —É –Ω—ñ–π —É–Ω—ñ–∫–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ —á–∞—Å –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ñ —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –¥–∞—Ç—É.",
        "–°—Ç–≤–æ—Ä–∏–≤ –Ω–∞ –ª–∏—Å—Ç—ñ ‚ÄúDAU‚Äù –∫–æ–ª–æ–Ω–∫—É week_start_date —Ç–∞ –ø–æ—Ä–∞—Ö—É–≤–∞–≤ –π–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞–∫ —Å–∞–º–æ, —è–∫  —Ü–µ —Ä–æ–±–∏–≤ –Ω–∞ –ª–∏—Å—Ç—ñ ‚Äúactivity.",
        "–°—Ç–≤–æ—Ä–∏–≤ –ª–∏—Å—Ç ‚ÄúWAU‚Äù –∑ –∫–æ–ª–æ–Ω–∫–æ—é week_start_date.",
        "–°—Ç–≤–æ—Ä–∏–≤ –Ω–∞ –ª–∏—Å—Ç—ñ ‚ÄúWAU‚Äù –∫–æ–ª–æ–Ω–∫—É WAU —ñ –≤ –Ω—ñ–π –≤–∏–≤—ñ–≤  —É–Ω—ñ–∫–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ —á–∞—Å –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ñ —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å.",
        "–°—Ç–≤–æ—Ä–∏–≤ –Ω–∞ –ª–∏—Å—Ç—ñ ‚ÄúWAU‚Äù –∫–æ–ª–æ–Ω–∫—É Average DAU —ñ –≤ –Ω—ñ–π –≤–∏–≤—ñ–≤ —Å–µ—Ä–µ–¥–Ω—ñ–π DAU –∑–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å. –î–ª—è —Ü—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤ –¥–∞–Ω—ñ –∑ –ª–∏—Å—Ç–∞ ‚ÄúDAU‚Äù —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó SUMIF —Ç–∞ COUNTIF.",
        "–°—Ç–≤–æ—Ä–∏–≤ –Ω–∞ –ª–∏—Å—Ç—ñ ‚ÄúWAU‚Äù –∫–æ–ª–æ–Ω–∫—É DAU/WAU —Ç–∞ –≤ –Ω—ñ–π –≤–∏–≤—ñ–≤ —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è Average DAU –¥–æ WAU —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å."
        ]

        form_text_google5 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences3]) + "</div>"
        st.markdown(form_text_google5, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets 3.jpg", output_format="auto")
        st.write("")
        st.image("images/google sheets 4.jpg", output_format="auto")
        st.write("")
        st.write("–£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤ —Ç–∞–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:")
        
        sentences4 = [
        "AVERAGE",
        "STDEV",
        "MEDIAN",
        "PERCENTILE",
        "B2-WEEKDAY(B2;2)+1",
        "UNIQUE",
        "COUNTUNIQUEIFS",
        "SUMIF",
        "COUNTIF"
        ]

        form_text_google6 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences4]) + "</div>"
        st.markdown(form_text_google6, unsafe_allow_html=True)

        st.write("")
        st.subheader(f"–ü—Ä–æ–µ–∫—Ç 2.1")
        st.write("")
        st.write("–°–ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–≤ DAU —Ç–∞ WAU:")
        st.write("")

        sentences5 = [
        "–ù–∞ –ª–∏—Å—Ç—ñ ‚ÄúWAU‚Äù –¥–æ–¥–∞–≤ 20 –Ω–æ–≤–∏—Ö —Ä—è–¥–∫—ñ–≤ —ñ–∑ –¥–∞—Ç–∞–º–∏ —Å—Ç–∞—Ä—Ç—É —Ç–∏–∂–Ω—ñ–≤",
        "–ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ–π ROUND —Ç–∞ FORECAST —Å–ø—Ä–æ–∑–≥–Ω–æ–∑—É–≤–∞–≤ –∑–Ω–∞—á–µ–Ω–Ω—è WAU —Ç–∞ DAU –¥–ª—è –Ω–æ–≤–∏—Ö —Ç–∏–∂–Ω—ñ–≤.",
        "–ó–∞–ø–æ–≤–Ω–∏–≤ –∫–æ–ª–æ–Ω–∫—É DAU/WAU –¥–ª—è –Ω–æ–≤–∏—Ö —Ç–∏–∂–Ω—ñ–≤."
        ]

        form_text_google7 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences5]) + "</div>"
        st.markdown(form_text_google7, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets 5.jpg", output_format="auto")
        st.write("")

        st.subheader(f"–ü—Ä–æ–µ–∫—Ç 2.2")
        st.write("")
        st.write("–ü–æ–±—É–¥—É–≤–∞–≤ 4 —á–∞—Ä—Ç–∏:")
        st.write("1. –ß–∞—Ä—Ç —ñ–∑ –¥–∞–Ω–∏–º–∏ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ‚Äúactive users‚Äù. –¶–µ  –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π bar chart, —è–∫–∏–π –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –∫–æ–∂–Ω–∏–º language.")
        st.write("")
        st.image("images/google sheets 6.jpg", output_format="auto")
        st.write("")

        st.write("2. –ß–∞—Ä—Ç —ñ–∑ –¥–∞–Ω–∏–º–∏ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ‚Äúactive users‚Äù. –¶–µ pie chart, —è–∫–∏–π –ø–æ–∫–∞–∑—É—î —Ä–æ–∑–±–∏–≤–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –æ–∑–Ω–∞–∫–æ—é has_older_device_model.")
        st.write("")
        st.image("images/google sheets 7.jpg", output_format="auto")
        st.write("")

        st.write("3. –ß–∞—Ä—Ç —ñ–∑ –¥–∞–Ω–∏–º–∏ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ‚ÄúWAU‚Äù, —â–æ –º—ñ—Å—Ç–∏—Ç—å –Ω–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ñ–π –æ—Å—ñ —Ç–∏–∂–Ω—ñ, –∞ —Ç–∞–∫–æ–∂ –¥–≤—ñ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ñ –æ—Å—ñ: WAU —Ç–∞ DAU/WAU.")
        st.write("")
        st.image("images/google sheets 8.jpg", output_format="auto")
        st.write("")

        st.write("4. –ß–∞—Ä—Ç —ñ–∑ –¥–∞–Ω–∏–º–∏ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ‚ÄúWAU‚Äù, —â–æ –º—ñ—Å—Ç–∏—Ç—å –Ω–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ñ–π –æ—Å—ñ —Ç–∏–∂–Ω—ñ, –∞ –Ω–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ñ–π –æ—Å—ñ - –∑–Ω–∞—á–µ–Ω–Ω—è WAU.")
        st.write("")
        st.image("images/google sheets 9.jpg", output_format="auto")
        st.write("")

        st.subheader(f"–ü—Ä–æ–µ–∫—Ç 2.3")
        st.write("")
        st.write("–†–æ–±–æ—Ç–∞ –∑ —Ç–µ–∫—Å—Ç–æ–≤–∏–º–∏ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ —Ç–∞ –¥–∞—Ç–∞–º–∏ –≤ Google Sheets:")
        st.write("")

        sentences6 = [
        "–ù–∞ –ª–∏—Å—Ç—ñ ‚Äúactivity‚Äù —Ä–æ–∑–±–∏–≤ –∫–æ–ª–æ–Ω–∫—É game_activity_name –Ω–∞ –¥–≤—ñ —á–∞—Å—Ç–∏–Ω–∏: –Ω–∞–∑–≤–∞ –≥—Ä–∏ —Ç–∞ –Ω–∞–∑–≤—É –∞–∫—Ç–∏–≤–∞–Ω–æ—Å—Ç—ñ.",
        "8 –Ω–∞–∑–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –æ–± º—î–¥–Ω–∞–≤ –≤ 5 —Ç–∏–ø—ñ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –≤–∏–≤—ñ–≤ —Ç–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤ –ª–∏—Å—Ç—ñ ‚Äúactivity‚Äù –æ–∫—Ä–µ–º–æ—é –∫–æ–ª–æ–Ω–∫–æ—é",
        "–ù–∞ –ª–∏—Å—Ç—ñ ‚Äúactivity‚Äù —Å—Ç–≤–æ—Ä–∏–≤ –∫–æ–ª–æ–Ω–∫—É –∑ –º–æ–≤–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –∑–∞–ø–æ–≤–Ω–∏ —ó—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –¥–∞–Ω—ñ –∑ –ª–∏—Å—Ç–∞ ‚Äúactive users",
        "–ù–∞ –ª–∏—Å—Ç—ñ ‚Äúactivity‚Äù —Å—Ç–≤–æ—Ä–∏–≤ —Ç—Ä–∏ –∫–æ–ª–æ–Ω–∫–∏, —â–æ —î –ø–æ—Ö—ñ–¥–Ω–∏–º–∏ –≤—ñ–¥ –∫–æ–ª–æ–Ω–∫–∏ activity_date: a. Activity month ‚Äî –º—ñ—Å—è—Ü—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, —Ç–æ–±—Ç–æ –º—ñ—Å—è—Ü—å, –¥–æ —è–∫–æ–≥–æ –≤—Ö–æ–¥–∏—Ç—å activity_date. b. First activity month ‚Äî –ø–µ—Ä—à–∏–π –º—ñ—Å—è—Ü—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. c. Activity month number ‚Äî –Ω–æ–º–µ—Ä –º—ñ—Å—è—Ü—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ. –¢–æ–±—Ç–æ, —Å–∫—ñ–ª—å–∫–∏ –º—ñ—Å—è—Ü—ñ–≤ –ø—Ä–æ–π—à–ª–æ –≤—ñ–¥ First activity month –¥–æ Activity month."
        ]

        form_text_google8 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences6]) + "</div>"
        st.markdown(form_text_google8, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets 10.jpg", output_format="auto")
        st.write("")

        st.write("–£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤ —Ç–∞–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:")

        sentences8 = [
        "LEFT",
        "FIND",
        "RIGHT",
        "VLOOKUP",
        "DATE",
        "YEAR",
        "MONTH",
        "MINIFS",
        "DATEDIF"
        ]

        form_text_google10 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences8]) + "</div>"
        st.markdown(form_text_google10, unsafe_allow_html=True)
        st.write("")
        st.subheader(f"–ü—Ä–æ–µ–∫—Ç 2.4")
        st.write("")
        st.write("–ö–æ–≥–æ—Ä—Ç–Ω–∏–π –∞–Ω–∞–ª—ñ–∑")
        st.write("")

        sentences7 = [
        "–°—Ç–≤–æ—Ä–∏–≤ –Ω–æ–≤–∏–π –ª–∏—Å—Ç ‚ÄúCohort analysis‚Äù —ñ–∑ pivot table, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –¥–∞–Ω—ñ –∑ –ª–∏—Å—Ç–∞ ‚Äúactivity",
        "–£ pivot table –≤–∏–≤—ñ–≤ —É —Ä—è–¥–∫–∞—Ö Activity month number —Ç–∞ —è–∫ values ‚Äî –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —é–∑–µ—Ä—ñ–≤.",
        "–í—ñ–∑—É–∞–ª—ñ–∑—É–≤–∞–≤ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –∫–æ–∂–µ–Ω –º—ñ—Å—è—Ü—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ. –°—Ç–≤–æ—Ä–∏–≤ line chart —ñ–∑ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ—é –≤—ñ—Å—Å—é ‚Äî Activity month number —Ç–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ—é ‚Äî –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –º–∞—é—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π month number."
        ]

        form_text_google9 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences7]) + "</div>"
        st.markdown(form_text_google9, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets 11.jpg", output_format="auto")
        st.write("")

        st.write("")
        st.image("images/google sheets 12.jpg", output_format="auto")
        

        st.subheader(f"–ü—Ä–æ–µ–∫—Ç 2.5")
        st.write("")
        st.write(" –ü–æ–±—É–¥—É–≤–∞–≤ —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è –∫–æ–≥–æ—Ä—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É:")
        st.write("")

        sentences9 = [
        "–ù–∞ –æ–∫—Ä–µ–º–æ–º—É –ª–∏—Å—Ç—ñ —Å—Ç–≤–æ—Ä–∏–≤ pivot table, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –¥–∞–Ω—ñ –∑ –ª–∏—Å—Ç–∞ ‚Äúactivity‚Äù",
        "–£ pivot table –≤–∏–≤—ñ–≤ —É —Ä—è–¥–∫–∞—Ö First activity month, —É –∫–æ–ª–æ–Ω–∫–∞—Ö ‚Äî Activity month number —Ç–∞ —è–∫ values ‚Äî –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —é–∑–µ—Ä—ñ–≤."
        ]

        form_text_google11 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences9]) + "</div>"
        st.markdown(form_text_google11, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets 13.jpg", output_format="auto")
        st.write("")

        sentences10 = [
        "–ó–Ω–∏–∑—É –ø—ñ–¥ pivot table —Å—Ç–≤–æ—Ä–∏–≤ —Ç–∞–±–ª–∏—Ü—é, —è–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏–º–µ —Ç—ñ –∂ –¥–∞–Ω—ñ, —â–æ –π pivot table, –∞–ª–µ –∑–∞–º—ñ—Å—Ç—å values (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —é–∑–µ—Ä—ñ–≤) –≤–∏–≤—ñ–≤ retention rate —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ–π –∫–ª—ñ—Ç–∏–Ω—ñ.",
        "–ó—Ä–æ–±–∏–≤ —Ç–∞–∫, —â–æ–± –¥—Ä—É–≥–∞ —Ç–∞–±–ª–∏—Ü—è –∑–º–µ–Ω—à—É–≤–∞–ª–∞—Å—è —á–∏ –∑–±—ñ–ª—å—à—É–≤–∞–ª–∞—Å—è –æ–¥–Ω–æ—á–∞—Å–Ω–æ –∑ pivot table.",
        "–ó–∞—Å—Ç–æ—Å—É–≤–∞–≤ –¥–æ –æ–±–æ—Ö —Ç–∞–±–ª–∏—Ü—å conditional formatting, —â–æ–± –ø—ñ–¥—Å–≤—ñ—Ç–∏—Ç–∏ –Ω–∞–π–±—ñ–ª—å—à—ñ —Ç–∞ –Ω–∞–π–º–µ–Ω—à—ñ –∑–Ω–∞—á–µ–Ω–Ω—è."
        ]

        form_text_google12 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences10]) + "</div>"
        st.markdown(form_text_google12, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets 14.jpg", output_format="auto")

        st.write("")

        sentences11 = [
        "–ü–æ—Ä—è–¥ —ñ–∑ —Ç–∞–±–ª–∏—Ü–µ—é –¥–æ–¥–∞–≤ —Ç—Ä–∏ –∑—Ä—ñ–∑–∏: –Ω–∞–∑–≤–∞ –≥—Ä–∏, —Ç–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –º–æ–≤–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."
        ]

        form_text_google13 = "<div>" + "</div><div>".join([f"‚Ä¢ {sentence}" for sentence in sentences11]) + "</div>"
        st.markdown(form_text_google13, unsafe_allow_html=True)

        st.write("")
        st.image("images/google sheets 15.jpg", output_format="auto")

def about_me(selected_project):
    
    if selected_project == 'Resume':
        st.subheader("About me")
        st.image("images/–ó–Ω—ñ–º–æ–∫ –µ–∫—Ä–∞–Ω–∞ 2023-10-10 162023.png", output_format="auto")

        contact_info = """
        **Connect with me:**
        - 067 689 32 68 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;&nbsp; - [Telegram](https://t.me/your_telegram_link)
        - dnpidgainiy2005@gmail.com &emsp;&emsp;&emsp;&emsp;&emsp; - [LinkedIn](https://www.linkedin.com/in/your_linkedin_profile)
        """


        st.markdown(contact_info, unsafe_allow_html=True)
        

        

        



st.title('–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ')


sections = ['About me', 'SQL', 'Python', 'Visualization', 'Google Sheets']
selected_section = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:", sections)


# selected_project = None

if selected_section == 'About me':
    selected_project = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–µ–∫—Ç:", ['Resume'])
    if selected_project:
        about_me(selected_project)


elif selected_section == 'SQL':
    selected_project = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–µ–∫—Ç:", ['PostgreSQL', 'Big Query'])
    if selected_project:
        sql(selected_project)


elif selected_section == 'Python':
    selected_project = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–µ–∫—Ç:", ['Analysis of YouTube', 'creation and analysis of dataset', '–ü—Ä–æ–µ–∫—Ç 3', 'regular expressions', '–ü—Ä–æ–µ–∫—Ç 5'])
    if selected_project:
        python(selected_project)


elif selected_section == 'Visualization':
    selected_project = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–µ–∫—Ç:", ['Tableau', 'Power BI', 'Looker studio', 'Amplitude'])
    if selected_project:
        visualization(selected_project)


elif selected_section == 'Google Sheets':
    selected_project = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–µ–∫—Ç:", ['–ü—Ä–æ–µ–∫—Ç 1', '–ü—Ä–æ–µ–∫—Ç 2'])
    if selected_project:
        google_sheets(selected_project)
